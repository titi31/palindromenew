{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5","program":"/Users/timothelaude/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=27d4ce93208c8fa2","-C","extra-filename=-27d4ce93208c8fa2","--out-dir","/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps","-L","dependency=/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps","--extern","futures_core=/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps/libfutures_core-f7e85670be9b6bbd.rmeta","--extern","futures_task=/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps/libfutures_task-fabe77893148d37f.rmeta","--extern","pin_project=/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps/libpin_project-208d0e829c038313.rmeta","--extern","pin_utils=/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps/libpin_utils-e70f2a28a5a127e8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/timothelaude/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/timothelaude/Documents/palindromenew/target/rls/debug/deps/libfutures_util-27d4ce93208c8fa2.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[17048136989920409839,2063342343841405567]},"crate_root":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src","external_crates":[{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[13511297098663441791,13154330100699476404]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3277486079989407075,17943763516068403788]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[2077472581434032296,16471800650332436877]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[14014849241387720110,13364597968974664157]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[5910180239328109903,279773339453024198]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":6,"id":{"name":"alloc","disambiguator":[6080923438680138448,14195335843426821389]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[1356100850129081594,9097101615995702594]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[5921159961707824016,14013822414726087416]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[1138973083447649293,1688603632818648317]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[13138323699967107576,8974460855248662014]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[9500888470717765493,17092073675944042020]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":12,"id":{"name":"backtrace_sys","disambiguator":[2312912048730511338,18260434057743106393]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[16177307682575393950,4440920517740374143]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14958077028657982302,11930047013765948913]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[4183850045203119219,771502449638896420]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","num":16,"id":{"name":"pin_utils","disambiguator":[14544938283957187276,16023520067502703235]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","num":17,"id":{"name":"futures_task","disambiguator":[1776771732873084274,5825380704629311874]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":18,"id":{"name":"pin_project","disambiguator":[14183020314530578308,1834908355279574072]}},{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","num":19,"id":{"name":"pin_project_internal","disambiguator":[14796900155381275069,3468257225423119840]}}],"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1650,"byte_end":1655,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":7},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1676,"byte_end":1683,"line_start":38,"line_end":38,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":168},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":1920,"byte_end":1933,"line_start":51,"line_end":51,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12670,"byte_end":12681,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":1,"index":8293},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12683,"byte_end":12689,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12691,"byte_end":12700,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12726,"byte_end":12735,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12737,"byte_end":12751,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12753,"byte_end":12768,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12883,"byte_end":12890,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2526},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12892,"byte_end":12896,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12898,"byte_end":12907,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3015},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12909,"byte_end":12916,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2809},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12918,"byte_end":12928,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2742},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12930,"byte_end":12933,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12935,"byte_end":12945,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2933},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12947,"byte_end":12951,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12953,"byte_end":12962,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2864},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12964,"byte_end":12971,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2687},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13067,"byte_end":13080,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3569},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13345,"byte_end":13352,"line_start":34,"line_end":34,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3734},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13354,"byte_end":13361,"line_start":34,"line_end":34,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3802},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13363,"byte_end":13369,"line_start":34,"line_end":34,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3938},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13371,"byte_end":13381,"line_start":34,"line_end":34,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3870},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13383,"byte_end":13392,"line_start":34,"line_end":34,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3186},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13394,"byte_end":13404,"line_start":34,"line_end":34,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4074},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13406,"byte_end":13412,"line_start":34,"line_end":34,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4006},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13414,"byte_end":13419,"line_start":34,"line_end":34,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3652},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13421,"byte_end":13427,"line_start":34,"line_end":34,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3513},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13429,"byte_end":13445,"line_start":34,"line_end":34,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13451,"byte_end":13463,"line_start":35,"line_end":35,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4225},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13465,"byte_end":13477,"line_start":35,"line_end":35,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4143},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13479,"byte_end":13490,"line_start":35,"line_end":35,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3378},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13492,"byte_end":13502,"line_start":35,"line_end":35,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":327},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13626,"byte_end":13630,"line_start":44,"line_end":44,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4290},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13632,"byte_end":13636,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":354},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13677,"byte_end":13684,"line_start":47,"line_end":47,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4296},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13686,"byte_end":13693,"line_start":47,"line_end":47,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13740,"byte_end":13750,"line_start":50,"line_end":50,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4302},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13752,"byte_end":13761,"line_start":50,"line_end":50,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13816,"byte_end":13830,"line_start":53,"line_end":53,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4364},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13832,"byte_end":13844,"line_start":53,"line_end":53,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4426},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13882,"byte_end":13894,"line_start":56,"line_end":56,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13934,"byte_end":13941,"line_start":59,"line_end":59,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":448},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13943,"byte_end":13949,"line_start":59,"line_end":59,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13986,"byte_end":13989,"line_start":62,"line_end":62,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13991,"byte_end":13993,"line_start":62,"line_end":62,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":13995,"byte_end":14000,"line_start":62,"line_end":62,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4473},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14002,"byte_end":14007,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14042,"byte_end":14046,"line_start":65,"line_end":65,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":518},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14048,"byte_end":14053,"line_start":65,"line_end":65,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":522},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14055,"byte_end":14060,"line_start":65,"line_end":65,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":527},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14062,"byte_end":14067,"line_start":65,"line_end":65,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4575},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14069,"byte_end":14073,"line_start":65,"line_end":65,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4627},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14075,"byte_end":14080,"line_start":65,"line_end":65,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4693},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14082,"byte_end":14087,"line_start":65,"line_end":65,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4773},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14089,"byte_end":14094,"line_start":65,"line_end":65,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":556},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14245,"byte_end":14251,"line_start":73,"line_end":73,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4867},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14253,"byte_end":14259,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":585},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14427,"byte_end":14435,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14437,"byte_end":14446,"line_start":82,"line_end":82,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":592},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14448,"byte_end":14457,"line_start":82,"line_end":82,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":597},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14459,"byte_end":14468,"line_start":82,"line_end":82,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4945},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14470,"byte_end":14477,"line_start":82,"line_end":82,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4997},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14479,"byte_end":14487,"line_start":82,"line_end":82,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5063},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14489,"byte_end":14497,"line_start":82,"line_end":82,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5143},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14499,"byte_end":14507,"line_start":82,"line_end":82,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14683,"byte_end":14693,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5237},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14695,"byte_end":14704,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5245},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":14858,"byte_end":14864,"line_start":99,"line_end":99,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11768,"byte_end":11777,"line_start":305,"line_end":305,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11779,"byte_end":11791,"line_start":305,"line_end":305,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114196,"byte_end":114207,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114209,"byte_end":114215,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114217,"byte_end":114226,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5316},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114342,"byte_end":114347,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5373},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114349,"byte_end":114356,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5429},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114358,"byte_end":114364,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5474},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114366,"byte_end":114375,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5523},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114377,"byte_end":114383,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5596},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114385,"byte_end":114394,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6124},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114396,"byte_end":114403,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5729},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114405,"byte_end":114412,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5787},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114414,"byte_end":114418,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5866},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114420,"byte_end":114427,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5932},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114429,"byte_end":114433,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5990},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114439,"byte_end":114446,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6063},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114448,"byte_end":114451,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6212},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114453,"byte_end":114457,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6278},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114459,"byte_end":114463,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6228},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114465,"byte_end":114473,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6772},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114475,"byte_end":114479,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6220},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114481,"byte_end":114495,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6326},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114497,"byte_end":114501,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6375},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114503,"byte_end":114512,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114514,"byte_end":114523,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":5981},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114529,"byte_end":114541,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6451},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114543,"byte_end":114547,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6500},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114549,"byte_end":114558,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6576},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114560,"byte_end":114569,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6639},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114571,"byte_end":114575,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6709},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114577,"byte_end":114580,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":1874},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115239,"byte_end":115249,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6852},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115251,"byte_end":115258,"line_start":44,"line_end":44,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":6925},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115260,"byte_end":115267,"line_start":44,"line_end":44,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7077},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115269,"byte_end":115279,"line_start":44,"line_end":44,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7001},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115281,"byte_end":115290,"line_start":44,"line_end":44,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7150},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115292,"byte_end":115302,"line_start":44,"line_end":44,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7274},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115304,"byte_end":115310,"line_start":44,"line_end":44,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7198},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115312,"byte_end":115317,"line_start":44,"line_end":44,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7347},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115319,"byte_end":115325,"line_start":44,"line_end":44,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7684},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115331,"byte_end":115341,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7740},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115343,"byte_end":115352,"line_start":45,"line_end":45,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7491},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115354,"byte_end":115363,"line_start":45,"line_end":45,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7564},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115365,"byte_end":115377,"line_start":45,"line_end":45,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7634},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115379,"byte_end":115389,"line_start":45,"line_end":45,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7785},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115391,"byte_end":115398,"line_start":45,"line_end":45,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7425},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115400,"byte_end":115410,"line_start":45,"line_end":45,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7417},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115412,"byte_end":115419,"line_start":45,"line_end":45,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7929},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115425,"byte_end":115437,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115439,"byte_end":115451,"line_start":46,"line_end":46,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":7864},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115453,"byte_end":115462,"line_start":46,"line_end":46,"column_start":33,"column_end":42},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2003},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115786,"byte_end":115790,"line_start":60,"line_end":60,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8005},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115792,"byte_end":115796,"line_start":60,"line_end":60,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2021},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115835,"byte_end":115841,"line_start":63,"line_end":63,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8011},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115843,"byte_end":115849,"line_start":63,"line_end":63,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2045},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115886,"byte_end":115891,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8017},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115893,"byte_end":115898,"line_start":66,"line_end":66,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2072},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115933,"byte_end":115937,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8023},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115939,"byte_end":115943,"line_start":69,"line_end":69,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2096},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115984,"byte_end":115991,"line_start":72,"line_end":72,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8065},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":115993,"byte_end":116000,"line_start":72,"line_end":72,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2126},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116041,"byte_end":116048,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2118},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116050,"byte_end":116056,"line_start":75,"line_end":75,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116095,"byte_end":116101,"line_start":78,"line_end":78,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8071},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116103,"byte_end":116109,"line_start":78,"line_end":78,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":2187},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116148,"byte_end":116154,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":8132},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":116156,"byte_end":116162,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":687}},{"kind":"Use","ref_id":{"krate":0,"index":1420},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11850,"byte_end":11859,"line_start":308,"line_end":308,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11861,"byte_end":11873,"line_start":308,"line_end":308,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300532,"byte_end":300543,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":0,"index":2224},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300581,"byte_end":300589,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":0,"index":2225},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300591,"byte_end":300604,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":1,"index":8433},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300637,"byte_end":300644,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":1,"index":32507},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300646,"byte_end":300650,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":1,"index":8443},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300652,"byte_end":300657,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":1,"index":32547},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300659,"byte_end":300667,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":1,"index":32556},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300669,"byte_end":300683,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":10},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300715,"byte_end":300720,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":13},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300722,"byte_end":300732,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":16},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300734,"byte_end":300744,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":89},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300750,"byte_end":300759,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":55},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300761,"byte_end":300775,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":110},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300777,"byte_end":300792,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2215}},{"kind":"Use","ref_id":{"krate":17,"index":151},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300820,"byte_end":300830,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2215}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":12350,"line_start":1,"line_end":335,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2243},{"krate":0,"index":2245}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":385,"byte_end":391,"line_start":8,"line_end":8,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":483,"byte_end":504,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":737,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":155},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":302},{"krate":0,"index":317},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":495},{"krate":0,"index":500},{"krate":0,"index":533},{"krate":0,"index":542},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":603},{"krate":0,"index":612},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":680},{"krate":0,"index":681}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12352,"byte_end":12363,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12364,"byte_end":12367,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12368,"byte_end":12442,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12443,"byte_end":12521,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/mod.rs","byte_start":12522,"byte_end":12552,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35003,"byte_end":35008,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35027,"byte_end":35033,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35052,"byte_end":35057,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"Flatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34936,"byte_end":34950,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":34977,"byte_end":34984,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39489,"byte_end":39556,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39457,"byte_end":39471,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39568,"byte_end":39572,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":2550},{"krate":0,"index":2551}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41354,"byte_end":41364,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn () -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39732,"byte_end":39800,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39805,"byte_end":39808,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39813,"byte_end":39881,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39886,"byte_end":39931,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39936,"byte_end":39939,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39944,"byte_end":39958,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39963,"byte_end":39966,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39971,"byte_end":39978,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39983,"byte_end":40024,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40029,"byte_end":40060,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40065,"byte_end":40121,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40126,"byte_end":40150,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40155,"byte_end":40190,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40195,"byte_end":40220,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40225,"byte_end":40228,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40233,"byte_end":40282,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40287,"byte_end":40290,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40295,"byte_end":40337,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40342,"byte_end":40381,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40386,"byte_end":40425,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40430,"byte_end":40447,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40452,"byte_end":40455,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::termianted()` to create an already-terminated future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40460,"byte_end":40530,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40535,"byte_end":40574,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40579,"byte_end":40620,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40625,"byte_end":40651,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40656,"byte_end":40659,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40664,"byte_end":40674,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40679,"byte_end":40696,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40701,"byte_end":40735,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40740,"byte_end":40787,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40792,"byte_end":40841,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40846,"byte_end":40908,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40913,"byte_end":40937,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40942,"byte_end":40985,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":40990,"byte_end":41047,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41052,"byte_end":41127,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41132,"byte_end":41162,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41167,"byte_end":41184,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41189,"byte_end":41203,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41208,"byte_end":41292,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41297,"byte_end":41306,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41311,"byte_end":41316,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41321,"byte_end":41330,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41335,"byte_end":41342,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42317,"byte_end":42327,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2575},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42391,"byte_end":42399,"line_start":19,"line_end":19,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2570},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"Map::{Incomplete, Complete}","parent":null,"children":[{"krate":0,"index":2573},{"krate":0,"index":2575}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42222,"byte_end":42289,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42190,"byte_end":42204,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42299,"byte_end":42302,"line_start":13,"line_end":13,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":2609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2634},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2636}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2689}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2745}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2811}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2867}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":2890},{"krate":0,"index":2891}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2937}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2959},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3018}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3042}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3084}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":3103},{"krate":0,"index":3104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3137}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18777,"byte_end":18786,"line_start":119,"line_end":119,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18678,"byte_end":18752,"line_start":117,"line_end":117,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18753,"byte_end":18766,"line_start":118,"line_end":118,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19618,"byte_end":19621,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn <U, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18801,"byte_end":18876,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18881,"byte_end":18904,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18909,"byte_end":18912,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18917,"byte_end":18991,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18996,"byte_end":19067,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19072,"byte_end":19134,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19139,"byte_end":19142,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19147,"byte_end":19218,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19223,"byte_end":19294,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19299,"byte_end":19320,"line_start":129,"line_end":129,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19325,"byte_end":19328,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19333,"byte_end":19347,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19352,"byte_end":19355,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19360,"byte_end":19367,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19372,"byte_end":19413,"line_start":134,"line_end":134,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19418,"byte_end":19453,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19458,"byte_end":19461,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19466,"byte_end":19495,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19500,"byte_end":19543,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19548,"byte_end":19584,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19589,"byte_end":19598,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19603,"byte_end":19610,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20018,"byte_end":20026,"line_start":155,"line_end":155,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn <U> (self) -> MapInto<Self, U>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19791,"byte_end":19866,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19871,"byte_end":19894,"line_start":151,"line_end":151,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19899,"byte_end":19902,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19907,"byte_end":19985,"line_start":153,"line_end":153,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":19990,"byte_end":20010,"line_start":154,"line_end":154,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21038,"byte_end":21042,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20185,"byte_end":20261,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20266,"byte_end":20309,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20314,"byte_end":20317,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20322,"byte_end":20393,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20398,"byte_end":20472,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20477,"byte_end":20493,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20498,"byte_end":20501,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20506,"byte_end":20581,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20586,"byte_end":20597,"line_start":171,"line_end":171,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20602,"byte_end":20605,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20610,"byte_end":20681,"line_start":173,"line_end":173,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20686,"byte_end":20712,"line_start":174,"line_end":174,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20717,"byte_end":20720,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20725,"byte_end":20739,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20744,"byte_end":20747,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20752,"byte_end":20759,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20764,"byte_end":20805,"line_start":179,"line_end":179,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20810,"byte_end":20845,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20850,"byte_end":20853,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20858,"byte_end":20892,"line_start":182,"line_end":182,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20897,"byte_end":20962,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":20967,"byte_end":21004,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21009,"byte_end":21018,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21023,"byte_end":21030,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21912,"byte_end":21923,"line_start":218,"line_end":218,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21254,"byte_end":21329,"line_start":196,"line_end":196,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21334,"byte_end":21355,"line_start":197,"line_end":197,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21360,"byte_end":21363,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21368,"byte_end":21448,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21453,"byte_end":21525,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21530,"byte_end":21533,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21538,"byte_end":21552,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21557,"byte_end":21560,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21565,"byte_end":21572,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21577,"byte_end":21618,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21623,"byte_end":21658,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21663,"byte_end":21666,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21671,"byte_end":21685,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21690,"byte_end":21718,"line_start":209,"line_end":209,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21723,"byte_end":21759,"line_start":210,"line_end":210,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21764,"byte_end":21776,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21781,"byte_end":21819,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21824,"byte_end":21830,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21835,"byte_end":21838,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21843,"byte_end":21878,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21883,"byte_end":21892,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":21897,"byte_end":21904,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22728,"byte_end":22740,"line_start":248,"line_end":248,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn <A> (self) -> Either<A, Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22069,"byte_end":22145,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22150,"byte_end":22171,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22176,"byte_end":22179,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22184,"byte_end":22263,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22268,"byte_end":22340,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22345,"byte_end":22348,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22353,"byte_end":22367,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22372,"byte_end":22375,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22380,"byte_end":22387,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22392,"byte_end":22433,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22438,"byte_end":22473,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22478,"byte_end":22481,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22486,"byte_end":22500,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22505,"byte_end":22533,"line_start":239,"line_end":239,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22538,"byte_end":22574,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22579,"byte_end":22591,"line_start":241,"line_end":241,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22596,"byte_end":22634,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22639,"byte_end":22645,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22650,"byte_end":22653,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22658,"byte_end":22694,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22699,"byte_end":22708,"line_start":246,"line_end":246,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22713,"byte_end":22720,"line_start":247,"line_end":247,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23485,"byte_end":23496,"line_start":274,"line_end":274,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22887,"byte_end":22940,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22945,"byte_end":22948,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":22953,"byte_end":23027,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23032,"byte_end":23095,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23100,"byte_end":23103,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23108,"byte_end":23122,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23127,"byte_end":23130,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23135,"byte_end":23142,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23147,"byte_end":23188,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23193,"byte_end":23228,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23233,"byte_end":23268,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23273,"byte_end":23276,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23281,"byte_end":23311,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23316,"byte_end":23354,"line_start":269,"line_end":269,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23359,"byte_end":23410,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23415,"byte_end":23451,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23456,"byte_end":23465,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23470,"byte_end":23477,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24327,"byte_end":24334,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23601,"byte_end":23665,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23670,"byte_end":23706,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23711,"byte_end":23714,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23719,"byte_end":23788,"line_start":284,"line_end":284,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23793,"byte_end":23830,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23835,"byte_end":23838,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23843,"byte_end":23903,"line_start":287,"line_end":287,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23908,"byte_end":23911,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23916,"byte_end":23987,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":23992,"byte_end":24018,"line_start":290,"line_end":290,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24023,"byte_end":24026,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24031,"byte_end":24045,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24050,"byte_end":24053,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24058,"byte_end":24065,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24070,"byte_end":24111,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24116,"byte_end":24151,"line_start":296,"line_end":296,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24156,"byte_end":24159,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24164,"byte_end":24210,"line_start":298,"line_end":298,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24215,"byte_end":24256,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24261,"byte_end":24293,"line_start":300,"line_end":300,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24298,"byte_end":24307,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24312,"byte_end":24319,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25439,"byte_end":25453,"line_start":337,"line_end":337,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn (self) -> FlattenStream<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24548,"byte_end":24623,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24628,"byte_end":24651,"line_start":313,"line_end":313,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24656,"byte_end":24659,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24664,"byte_end":24736,"line_start":315,"line_end":315,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24741,"byte_end":24814,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24819,"byte_end":24833,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24838,"byte_end":24841,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24846,"byte_end":24916,"line_start":319,"line_end":319,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24921,"byte_end":24939,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24944,"byte_end":24947,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24952,"byte_end":24966,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24971,"byte_end":24974,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24979,"byte_end":24986,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":24991,"byte_end":25032,"line_start":325,"line_end":325,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25037,"byte_end":25072,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25077,"byte_end":25120,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25125,"byte_end":25128,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25133,"byte_end":25173,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25178,"byte_end":25244,"line_start":330,"line_end":330,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25249,"byte_end":25252,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25257,"byte_end":25310,"line_start":332,"line_end":332,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25315,"byte_end":25361,"line_start":333,"line_end":333,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25366,"byte_end":25405,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25410,"byte_end":25419,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25424,"byte_end":25431,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26489,"byte_end":26493,"line_start":361,"line_end":361,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25594,"byte_end":25667,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25672,"byte_end":25738,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25743,"byte_end":25761,"line_start":347,"line_end":347,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25766,"byte_end":25769,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25774,"byte_end":25841,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25846,"byte_end":25911,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25916,"byte_end":25988,"line_start":351,"line_end":351,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":25993,"byte_end":26067,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26072,"byte_end":26098,"line_start":353,"line_end":353,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26103,"byte_end":26106,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26111,"byte_end":26182,"line_start":355,"line_end":355,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26187,"byte_end":26262,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26267,"byte_end":26321,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26326,"byte_end":26329,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26334,"byte_end":26408,"line_start":359,"line_end":359,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26413,"byte_end":26481,"line_start":360,"line_end":360,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27333,"byte_end":27340,"line_start":387,"line_end":387,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26639,"byte_end":26705,"line_start":369,"line_end":369,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26710,"byte_end":26713,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26718,"byte_end":26793,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26798,"byte_end":26871,"line_start":372,"line_end":372,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26876,"byte_end":26945,"line_start":373,"line_end":373,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":26950,"byte_end":27000,"line_start":374,"line_end":374,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27005,"byte_end":27008,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27013,"byte_end":27027,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27032,"byte_end":27035,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27040,"byte_end":27047,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27052,"byte_end":27093,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27098,"byte_end":27133,"line_start":380,"line_end":380,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27138,"byte_end":27141,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27146,"byte_end":27175,"line_start":382,"line_end":382,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27180,"byte_end":27258,"line_start":383,"line_end":383,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27263,"byte_end":27299,"line_start":384,"line_end":384,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27304,"byte_end":27313,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":27318,"byte_end":27325,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32248,"byte_end":32258,"line_start":533,"line_end":533,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn (self) -> UnitError<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32115,"byte_end":32164,"line_start":531,"line_end":531,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32169,"byte_end":32240,"line_start":532,"line_end":532,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32497,"byte_end":32508,"line_start":542,"line_end":542,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn (self) -> NeverError<Self>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32361,"byte_end":32410,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32415,"byte_end":32489,"line_start":541,"line_end":541,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32690,"byte_end":32700,"line_start":550,"line_end":550,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Self::Output>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32613,"byte_end":32682,"line_start":549,"line_end":549,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34096,"byte_end":34108,"line_start":588,"line_end":588,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn (mut self) -> Option<Self::Output>","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32836,"byte_end":32908,"line_start":557,"line_end":557,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32913,"byte_end":32976,"line_start":558,"line_end":558,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32981,"byte_end":32984,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":32989,"byte_end":33055,"line_start":560,"line_end":560,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33060,"byte_end":33063,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33068,"byte_end":33141,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33146,"byte_end":33215,"line_start":563,"line_end":563,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33220,"byte_end":33290,"line_start":564,"line_end":564,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33295,"byte_end":33298,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33303,"byte_end":33317,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33322,"byte_end":33325,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33330,"byte_end":33337,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33342,"byte_end":33372,"line_start":569,"line_end":569,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33377,"byte_end":33427,"line_start":570,"line_end":570,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33432,"byte_end":33471,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33476,"byte_end":33527,"line_start":572,"line_end":572,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33532,"byte_end":33535,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33540,"byte_end":33600,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33605,"byte_end":33657,"line_start":575,"line_end":575,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33662,"byte_end":33669,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33674,"byte_end":33677,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33682,"byte_end":33751,"line_start":578,"line_end":578,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33756,"byte_end":33829,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33834,"byte_end":33866,"line_start":580,"line_end":580,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33871,"byte_end":33874,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33879,"byte_end":33886,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33891,"byte_end":33938,"line_start":583,"line_end":583,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33943,"byte_end":33982,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33987,"byte_end":33990,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":33995,"byte_end":34076,"line_start":586,"line_end":586,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":34081,"byte_end":34088,"line_start":587,"line_end":587,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66172,"byte_end":66182,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66093,"byte_end":66160,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66061,"byte_end":66075,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66172,"byte_end":66182,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3210},{"krate":0,"index":3211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67075,"byte_end":67080,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3235},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67099,"byte_end":67105,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67124,"byte_end":67129,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67046,"byte_end":67056,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"TryFlatten::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3237}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67005,"byte_end":67019,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67046,"byte_end":67056,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72356,"byte_end":72361,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72380,"byte_end":72386,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72405,"byte_end":72410,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72324,"byte_end":72337,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"TryFlattenErr::{First, Second, Empty}","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3308},{"krate":0,"index":3310}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72283,"byte_end":72297,"line_start":6,"line_end":6,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72324,"byte_end":72337,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3381}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3404},{"krate":0,"index":3405}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3449}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3468},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3472},{"krate":0,"index":3473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3513},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3515}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3534},{"krate":0,"index":3535}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3573}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3652},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3656}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3734},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3737}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3802},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3805}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3824},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":3828},{"krate":0,"index":3829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3873}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3892},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3941}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3960},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":3964},{"krate":0,"index":3965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4009}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4077}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4096},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":4100},{"krate":0,"index":4101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4147}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4169},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4174},{"krate":0,"index":4175}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4225},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4228}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4251},{"krate":0,"index":4252}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":271},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":49253,"byte_end":49265,"line_start":136,"line_end":136,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":49189,"byte_end":49242,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51923,"byte_end":51929,"line_start":215,"line_end":215,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50551,"byte_end":50609,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50614,"byte_end":50617,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50622,"byte_end":50697,"line_start":179,"line_end":179,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50702,"byte_end":50772,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50777,"byte_end":50850,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50855,"byte_end":50884,"line_start":182,"line_end":182,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50889,"byte_end":50892,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50897,"byte_end":50972,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":50977,"byte_end":51052,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51057,"byte_end":51104,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51109,"byte_end":51112,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51117,"byte_end":51192,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51197,"byte_end":51223,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51228,"byte_end":51231,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51236,"byte_end":51250,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51255,"byte_end":51258,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51263,"byte_end":51270,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51275,"byte_end":51313,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51318,"byte_end":51321,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51326,"byte_end":51367,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51372,"byte_end":51417,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51422,"byte_end":51464,"line_start":198,"line_end":198,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51469,"byte_end":51505,"line_start":199,"line_end":199,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51510,"byte_end":51519,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51524,"byte_end":51531,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51536,"byte_end":51539,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51544,"byte_end":51616,"line_start":203,"line_end":203,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51621,"byte_end":51632,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51637,"byte_end":51640,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51645,"byte_end":51652,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51657,"byte_end":51695,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51700,"byte_end":51703,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51708,"byte_end":51749,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51754,"byte_end":51800,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51805,"byte_end":51847,"line_start":211,"line_end":211,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51852,"byte_end":51889,"line_start":212,"line_end":212,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51894,"byte_end":51903,"line_start":213,"line_end":213,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":51908,"byte_end":51915,"line_start":214,"line_end":214,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53491,"byte_end":53505,"line_start":255,"line_end":255,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn <T, E, F> (self, e: E, f: F) -> MapOkOrElse<Self, F, E>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52120,"byte_end":52237,"line_start":223,"line_end":223,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52242,"byte_end":52245,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52250,"byte_end":52372,"line_start":225,"line_end":225,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52377,"byte_end":52427,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52432,"byte_end":52435,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52440,"byte_end":52515,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52520,"byte_end":52595,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52600,"byte_end":52647,"line_start":230,"line_end":230,"column_start":5,"column_end":52}},{"value":"/ ","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52652,"byte_end":52656,"line_start":231,"line_end":231,"column_start":5,"column_end":9}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52661,"byte_end":52736,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52741,"byte_end":52816,"line_start":233,"line_end":233,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52821,"byte_end":52868,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52873,"byte_end":52876,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52881,"byte_end":52956,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52961,"byte_end":52987,"line_start":237,"line_end":237,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":52992,"byte_end":52995,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53000,"byte_end":53014,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53019,"byte_end":53022,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53027,"byte_end":53034,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53039,"byte_end":53077,"line_start":242,"line_end":242,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53082,"byte_end":53085,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53090,"byte_end":53131,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53136,"byte_end":53181,"line_start":245,"line_end":245,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53186,"byte_end":53247,"line_start":246,"line_end":246,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53252,"byte_end":53284,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"/ ","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53289,"byte_end":53293,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53298,"byte_end":53344,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53349,"byte_end":53410,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53415,"byte_end":53448,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53453,"byte_end":53462,"line_start":252,"line_end":252,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53467,"byte_end":53474,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53479,"byte_end":53483,"line_start":254,"line_end":254,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55188,"byte_end":55195,"line_start":303,"line_end":303,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53739,"byte_end":53795,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53800,"byte_end":53803,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53808,"byte_end":53882,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53887,"byte_end":53948,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":53953,"byte_end":54023,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54028,"byte_end":54103,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54108,"byte_end":54143,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54148,"byte_end":54151,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54156,"byte_end":54231,"line_start":272,"line_end":272,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54236,"byte_end":54311,"line_start":273,"line_end":273,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54316,"byte_end":54363,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54368,"byte_end":54371,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54376,"byte_end":54451,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54456,"byte_end":54482,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54487,"byte_end":54490,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54495,"byte_end":54509,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54514,"byte_end":54517,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54522,"byte_end":54529,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54534,"byte_end":54572,"line_start":282,"line_end":282,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54577,"byte_end":54580,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54585,"byte_end":54626,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54631,"byte_end":54677,"line_start":285,"line_end":285,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54682,"byte_end":54725,"line_start":286,"line_end":286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54730,"byte_end":54767,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54772,"byte_end":54781,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54786,"byte_end":54793,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54798,"byte_end":54801,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54806,"byte_end":54879,"line_start":291,"line_end":291,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54884,"byte_end":54898,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54903,"byte_end":54906,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54911,"byte_end":54918,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54923,"byte_end":54961,"line_start":295,"line_end":295,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54966,"byte_end":54969,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":54974,"byte_end":55015,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55020,"byte_end":55065,"line_start":298,"line_end":298,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55070,"byte_end":55113,"line_start":299,"line_end":299,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55118,"byte_end":55154,"line_start":300,"line_end":300,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55159,"byte_end":55168,"line_start":301,"line_end":301,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55173,"byte_end":55180,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56285,"byte_end":56293,"line_start":333,"line_end":333,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55388,"byte_end":55458,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55463,"byte_end":55512,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55517,"byte_end":55520,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55525,"byte_end":55588,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55593,"byte_end":55661,"line_start":315,"line_end":315,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55666,"byte_end":55739,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55744,"byte_end":55820,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55825,"byte_end":55870,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55875,"byte_end":55878,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55883,"byte_end":55958,"line_start":320,"line_end":320,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55963,"byte_end":55989,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":55994,"byte_end":55997,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56002,"byte_end":56016,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56021,"byte_end":56024,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56029,"byte_end":56036,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56041,"byte_end":56079,"line_start":326,"line_end":326,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56084,"byte_end":56087,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56092,"byte_end":56133,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56138,"byte_end":56189,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56194,"byte_end":56251,"line_start":330,"line_end":330,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56256,"byte_end":56265,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56270,"byte_end":56277,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56589,"byte_end":56596,"line_start":343,"line_end":343,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn <U> (self) -> OkInto<Self, U>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56469,"byte_end":56527,"line_start":341,"line_end":341,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56532,"byte_end":56581,"line_start":342,"line_end":342,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58151,"byte_end":58159,"line_start":387,"line_end":387,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56770,"byte_end":56839,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56844,"byte_end":56918,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56923,"byte_end":56926,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":56931,"byte_end":57006,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57011,"byte_end":57081,"line_start":355,"line_end":355,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57086,"byte_end":57151,"line_start":356,"line_end":356,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57156,"byte_end":57222,"line_start":357,"line_end":357,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57227,"byte_end":57261,"line_start":358,"line_end":358,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57266,"byte_end":57269,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57274,"byte_end":57349,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57354,"byte_end":57380,"line_start":361,"line_end":361,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57385,"byte_end":57388,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57393,"byte_end":57407,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57412,"byte_end":57415,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57420,"byte_end":57427,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57432,"byte_end":57470,"line_start":366,"line_end":366,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57475,"byte_end":57478,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57483,"byte_end":57524,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57529,"byte_end":57574,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57579,"byte_end":57654,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57659,"byte_end":57695,"line_start":371,"line_end":371,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57700,"byte_end":57709,"line_start":372,"line_end":372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57714,"byte_end":57721,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57726,"byte_end":57729,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57734,"byte_end":57810,"line_start":375,"line_end":375,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57815,"byte_end":57826,"line_start":376,"line_end":376,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57831,"byte_end":57834,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57839,"byte_end":57846,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57851,"byte_end":57889,"line_start":379,"line_end":379,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57894,"byte_end":57897,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57902,"byte_end":57943,"line_start":381,"line_end":381,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57948,"byte_end":57994,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":57999,"byte_end":58075,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58080,"byte_end":58117,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58122,"byte_end":58131,"line_start":385,"line_end":385,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58136,"byte_end":58143,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59780,"byte_end":59787,"line_start":432,"line_end":432,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58413,"byte_end":58478,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58483,"byte_end":58555,"line_start":397,"line_end":397,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58560,"byte_end":58563,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58568,"byte_end":58643,"line_start":399,"line_end":399,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58648,"byte_end":58718,"line_start":400,"line_end":400,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58723,"byte_end":58788,"line_start":401,"line_end":401,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58793,"byte_end":58869,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58874,"byte_end":58892,"line_start":403,"line_end":403,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58897,"byte_end":58900,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58905,"byte_end":58980,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":58985,"byte_end":59011,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59016,"byte_end":59019,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59024,"byte_end":59038,"line_start":408,"line_end":408,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59043,"byte_end":59046,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59051,"byte_end":59058,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59063,"byte_end":59101,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59106,"byte_end":59109,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59114,"byte_end":59155,"line_start":413,"line_end":413,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59160,"byte_end":59206,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59211,"byte_end":59286,"line_start":415,"line_end":415,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59291,"byte_end":59328,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59333,"byte_end":59342,"line_start":417,"line_end":417,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59347,"byte_end":59354,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59359,"byte_end":59362,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59367,"byte_end":59440,"line_start":420,"line_end":420,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59445,"byte_end":59459,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59464,"byte_end":59467,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59472,"byte_end":59479,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59484,"byte_end":59522,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59527,"byte_end":59530,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59535,"byte_end":59576,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59581,"byte_end":59626,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59631,"byte_end":59705,"line_start":428,"line_end":428,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59710,"byte_end":59746,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59751,"byte_end":59760,"line_start":430,"line_end":430,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":59765,"byte_end":59772,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60763,"byte_end":60773,"line_start":459,"line_end":459,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60036,"byte_end":60109,"line_start":441,"line_end":441,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60114,"byte_end":60117,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60122,"byte_end":60197,"line_start":443,"line_end":443,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60202,"byte_end":60275,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60280,"byte_end":60349,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60354,"byte_end":60407,"line_start":446,"line_end":446,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60412,"byte_end":60415,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60420,"byte_end":60434,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60439,"byte_end":60442,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60447,"byte_end":60454,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60459,"byte_end":60500,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60505,"byte_end":60543,"line_start":452,"line_end":452,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60548,"byte_end":60551,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60556,"byte_end":60598,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60603,"byte_end":60684,"line_start":455,"line_end":455,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60689,"byte_end":60729,"line_start":456,"line_end":456,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60734,"byte_end":60743,"line_start":457,"line_end":457,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60748,"byte_end":60755,"line_start":458,"line_end":458,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61699,"byte_end":61710,"line_start":485,"line_end":485,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":60972,"byte_end":61043,"line_start":467,"line_end":467,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61048,"byte_end":61051,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61056,"byte_end":61131,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61136,"byte_end":61209,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61214,"byte_end":61283,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61288,"byte_end":61342,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61347,"byte_end":61350,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61355,"byte_end":61369,"line_start":474,"line_end":474,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61374,"byte_end":61377,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61382,"byte_end":61389,"line_start":476,"line_end":476,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61394,"byte_end":61435,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61440,"byte_end":61478,"line_start":478,"line_end":478,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61483,"byte_end":61486,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61491,"byte_end":61534,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61539,"byte_end":61619,"line_start":481,"line_end":481,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61624,"byte_end":61665,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61670,"byte_end":61679,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61684,"byte_end":61691,"line_start":484,"line_end":484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62095,"byte_end":62106,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn (self) -> TryFlatten<Self, Self::Ok>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61914,"byte_end":61989,"line_start":493,"line_end":493,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":61994,"byte_end":62023,"line_start":494,"line_end":494,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62028,"byte_end":62031,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62036,"byte_end":62087,"line_start":496,"line_end":496,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63215,"byte_end":63233,"line_start":530,"line_end":530,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn (self) -> TryFlattenStream<Self>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62271,"byte_end":62346,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62351,"byte_end":62374,"line_start":506,"line_end":506,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62379,"byte_end":62382,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62387,"byte_end":62459,"line_start":508,"line_end":508,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62464,"byte_end":62537,"line_start":509,"line_end":509,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62542,"byte_end":62556,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62561,"byte_end":62564,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62569,"byte_end":62639,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62644,"byte_end":62662,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62667,"byte_end":62670,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62675,"byte_end":62689,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62694,"byte_end":62697,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62702,"byte_end":62709,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62714,"byte_end":62755,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62760,"byte_end":62798,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62803,"byte_end":62849,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62854,"byte_end":62857,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62862,"byte_end":62922,"line_start":522,"line_end":522,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":62927,"byte_end":63006,"line_start":523,"line_end":523,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63011,"byte_end":63014,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63019,"byte_end":63076,"line_start":525,"line_end":525,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63081,"byte_end":63133,"line_start":526,"line_end":526,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63138,"byte_end":63181,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63186,"byte_end":63195,"line_start":528,"line_end":528,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63200,"byte_end":63207,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64230,"byte_end":64244,"line_start":560,"line_end":560,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn <F> (self, f: F) -> UnwrapOrElse<Self, F>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63400,"byte_end":63470,"line_start":538,"line_end":538,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63475,"byte_end":63512,"line_start":539,"line_end":539,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63517,"byte_end":63566,"line_start":540,"line_end":540,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63571,"byte_end":63574,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63579,"byte_end":63648,"line_start":542,"line_end":542,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63653,"byte_end":63726,"line_start":543,"line_end":543,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63731,"byte_end":63801,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63806,"byte_end":63824,"line_start":545,"line_end":545,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63829,"byte_end":63832,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63837,"byte_end":63905,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63910,"byte_end":63913,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63918,"byte_end":63932,"line_start":549,"line_end":549,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63937,"byte_end":63940,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63945,"byte_end":63952,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":63957,"byte_end":63995,"line_start":552,"line_end":552,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64000,"byte_end":64003,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64008,"byte_end":64049,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64054,"byte_end":64106,"line_start":555,"line_end":555,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64111,"byte_end":64158,"line_start":556,"line_end":556,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64163,"byte_end":64196,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64201,"byte_end":64210,"line_start":558,"line_end":558,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64215,"byte_end":64222,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65444,"byte_end":65455,"line_start":599,"line_end":599,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn (self) -> IntoFuture<Self>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64743,"byte_end":64796,"line_start":578,"line_end":578,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64801,"byte_end":64837,"line_start":579,"line_end":579,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64842,"byte_end":64845,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64850,"byte_end":64899,"line_start":581,"line_end":581,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64904,"byte_end":64971,"line_start":582,"line_end":582,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64976,"byte_end":64989,"line_start":583,"line_end":583,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":64994,"byte_end":64997,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65002,"byte_end":65016,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65021,"byte_end":65024,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65029,"byte_end":65036,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65041,"byte_end":65100,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65105,"byte_end":65108,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65113,"byte_end":65132,"line_start":590,"line_end":590,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65137,"byte_end":65155,"line_start":591,"line_end":591,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65160,"byte_end":65232,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65237,"byte_end":65269,"line_start":593,"line_end":593,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65274,"byte_end":65281,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65286,"byte_end":65362,"line_start":595,"line_end":595,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65367,"byte_end":65370,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65375,"byte_end":65424,"line_start":597,"line_end":597,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65429,"byte_end":65436,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65663,"byte_end":65677,"line_start":608,"line_end":608,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":271},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65560,"byte_end":65633,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":65638,"byte_end":65655,"line_start":607,"line_end":607,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4290},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74159,"byte_end":74163,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4292}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74025,"byte_end":74062,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74080,"byte_end":74147,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":327},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74704,"byte_end":74708,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn <F, R> (f: F) -> Lazy<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74267,"byte_end":74335,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74336,"byte_end":74339,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74340,"byte_end":74403,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74404,"byte_end":74407,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74408,"byte_end":74422,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74423,"byte_end":74426,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74427,"byte_end":74434,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74435,"byte_end":74476,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74477,"byte_end":74501,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74502,"byte_end":74505,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74506,"byte_end":74538,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74539,"byte_end":74566,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74567,"byte_end":74570,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74571,"byte_end":74608,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74609,"byte_end":74633,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74634,"byte_end":74641,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74642,"byte_end":74678,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74679,"byte_end":74688,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74689,"byte_end":74696,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4296},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75474,"byte_end":75481,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4298}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75335,"byte_end":75377,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75395,"byte_end":75462,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":354},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76000,"byte_end":76007,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75622,"byte_end":75702,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75703,"byte_end":75716,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75717,"byte_end":75720,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75721,"byte_end":75783,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75784,"byte_end":75787,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75788,"byte_end":75802,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75803,"byte_end":75806,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75807,"byte_end":75820,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75821,"byte_end":75862,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75863,"byte_end":75887,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75888,"byte_end":75891,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75892,"byte_end":75927,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75928,"byte_end":75954,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75955,"byte_end":75974,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75975,"byte_end":75984,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75985,"byte_end":75992,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4304},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76775,"byte_end":76781,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4302},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76740,"byte_end":76770,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4306},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76842,"byte_end":76846,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4302},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76799,"byte_end":76837,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4309},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77008,"byte_end":77012,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4302},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76865,"byte_end":76931,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76936,"byte_end":77003,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76711,"byte_end":76720,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"MaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4309}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76670,"byte_end":76684,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4341},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":76711,"byte_end":76720,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":380},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77478,"byte_end":77488,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn <Fut> (future: Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77017,"byte_end":77054,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77055,"byte_end":77058,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77059,"byte_end":77073,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77074,"byte_end":77077,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77078,"byte_end":77085,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77086,"byte_end":77127,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77128,"byte_end":77152,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77153,"byte_end":77178,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77179,"byte_end":77182,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77183,"byte_end":77232,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77233,"byte_end":77254,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77255,"byte_end":77307,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77308,"byte_end":77343,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77344,"byte_end":77399,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77400,"byte_end":77452,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77453,"byte_end":77462,"line_start":39,"line_end":39,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77463,"byte_end":77470,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77920,"byte_end":77930,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77899,"byte_end":77908,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":78244,"byte_end":78255,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":78124,"byte_end":78190,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":78195,"byte_end":78218,"line_start":61,"line_end":61,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":78223,"byte_end":78232,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80210,"byte_end":80216,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80175,"byte_end":80205,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80277,"byte_end":80281,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80234,"byte_end":80272,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80489,"byte_end":80493,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80296,"byte_end":80365,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80370,"byte_end":80440,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80445,"byte_end":80484,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80140,"byte_end":80152,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"TryMaybeDone::{Future, Done, Gone}","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4371}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80099,"byte_end":80113,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4403},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80140,"byte_end":80152,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":4406},{"krate":0,"index":4407}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80546,"byte_end":80560,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn <Fut> (future: Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80498,"byte_end":80538,"line_start":25,"line_end":25,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":81018,"byte_end":81028,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn (self: Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80997,"byte_end":81006,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":81344,"byte_end":81355,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn (self: Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":81221,"byte_end":81290,"line_start":45,"line_end":45,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":81295,"byte_end":81318,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":81323,"byte_end":81332,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83881,"byte_end":83893,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83802,"byte_end":83869,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83763,"byte_end":83777,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4447},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83881,"byte_end":83893,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":448},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84863,"byte_end":84869,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":450}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84743,"byte_end":84783,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84784,"byte_end":84851,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85456,"byte_end":85463,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84920,"byte_end":84991,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84992,"byte_end":84995,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84996,"byte_end":85062,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85063,"byte_end":85066,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85067,"byte_end":85081,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85082,"byte_end":85085,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85086,"byte_end":85093,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85094,"byte_end":85135,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85136,"byte_end":85169,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85170,"byte_end":85209,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85210,"byte_end":85213,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85214,"byte_end":85271,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85272,"byte_end":85315,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85316,"byte_end":85321,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85322,"byte_end":85325,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85326,"byte_end":85367,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85368,"byte_end":85430,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85431,"byte_end":85440,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85441,"byte_end":85448,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86183,"byte_end":86188,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86032,"byte_end":86079,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86104,"byte_end":86171,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86311,"byte_end":86321,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86228,"byte_end":86285,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86290,"byte_end":86299,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":487},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86987,"byte_end":86992,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn <T> (t: T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86741,"byte_end":86801,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86802,"byte_end":86805,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86806,"byte_end":86820,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86821,"byte_end":86824,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86825,"byte_end":86832,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86833,"byte_end":86874,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86875,"byte_end":86899,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86900,"byte_end":86903,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86904,"byte_end":86933,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86934,"byte_end":86961,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86962,"byte_end":86971,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86972,"byte_end":86979,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":489},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87304,"byte_end":87306,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn <T, E> (t: T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87038,"byte_end":87105,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87106,"byte_end":87109,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87110,"byte_end":87124,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87125,"byte_end":87128,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87129,"byte_end":87136,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87137,"byte_end":87178,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87179,"byte_end":87203,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87204,"byte_end":87207,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87208,"byte_end":87246,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87247,"byte_end":87278,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87279,"byte_end":87288,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87289,"byte_end":87296,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":492},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87637,"byte_end":87640,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn <T, E> (err: E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87370,"byte_end":87436,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87437,"byte_end":87440,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87441,"byte_end":87455,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87456,"byte_end":87459,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87460,"byte_end":87467,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87468,"byte_end":87509,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87510,"byte_end":87534,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87535,"byte_end":87538,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87539,"byte_end":87578,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87579,"byte_end":87611,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87612,"byte_end":87621,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":87622,"byte_end":87629,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4578},{"krate":0,"index":4579}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4600},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4659},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":4664},{"krate":0,"index":4665},{"krate":0,"index":4666},{"krate":0,"index":4667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4732},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740},{"krate":0,"index":4741},{"krate":0,"index":4742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4773},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4779},{"krate":0,"index":4780},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4783}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":88105,"byte_end":88119,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4829},{"krate":0,"index":4830},{"krate":0,"index":4831}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90755,"byte_end":90759,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> Join<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90178,"byte_end":90249,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90250,"byte_end":90253,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90254,"byte_end":90325,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90326,"byte_end":90401,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90402,"byte_end":90405,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90406,"byte_end":90475,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90476,"byte_end":90502,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90503,"byte_end":90506,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90507,"byte_end":90521,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90522,"byte_end":90525,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90526,"byte_end":90533,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90534,"byte_end":90575,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90576,"byte_end":90600,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90601,"byte_end":90604,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90605,"byte_end":90629,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90630,"byte_end":90654,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90655,"byte_end":90689,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90690,"byte_end":90693,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90694,"byte_end":90729,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90730,"byte_end":90739,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90740,"byte_end":90747,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":518},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91305,"byte_end":91310,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> Join3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":90966,"byte_end":91018,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91019,"byte_end":91022,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91023,"byte_end":91037,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91038,"byte_end":91041,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91042,"byte_end":91049,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91050,"byte_end":91091,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91092,"byte_end":91116,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91117,"byte_end":91120,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91121,"byte_end":91145,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91146,"byte_end":91170,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91171,"byte_end":91195,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91196,"byte_end":91235,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91236,"byte_end":91239,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91240,"byte_end":91279,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91280,"byte_end":91289,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91290,"byte_end":91297,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":522},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91893,"byte_end":91898,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> Join4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91523,"byte_end":91575,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91576,"byte_end":91579,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91580,"byte_end":91594,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91595,"byte_end":91598,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91599,"byte_end":91606,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91607,"byte_end":91648,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91649,"byte_end":91673,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91674,"byte_end":91677,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91678,"byte_end":91702,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91703,"byte_end":91727,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91728,"byte_end":91752,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91753,"byte_end":91777,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91778,"byte_end":91820,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91821,"byte_end":91824,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91825,"byte_end":91867,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91868,"byte_end":91877,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":91878,"byte_end":91885,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":527},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92570,"byte_end":92575,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> Join5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92169,"byte_end":92221,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92222,"byte_end":92225,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92226,"byte_end":92240,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92241,"byte_end":92244,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92245,"byte_end":92252,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92253,"byte_end":92294,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92295,"byte_end":92319,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92320,"byte_end":92323,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92324,"byte_end":92348,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92349,"byte_end":92373,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92374,"byte_end":92398,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92399,"byte_end":92423,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92424,"byte_end":92448,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92449,"byte_end":92494,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92495,"byte_end":92498,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92499,"byte_end":92544,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92545,"byte_end":92554,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/join.rs","byte_start":92555,"byte_end":92562,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93193,"byte_end":93199,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4870}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93055,"byte_end":93096,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93097,"byte_end":93164,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":556},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94465,"byte_end":94471,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn <A, B> (future1: A, future2: B) -> Select<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93290,"byte_end":93360,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93361,"byte_end":93364,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93365,"byte_end":93443,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93444,"byte_end":93520,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93521,"byte_end":93593,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93594,"byte_end":93597,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93598,"byte_end":93670,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93671,"byte_end":93699,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93700,"byte_end":93703,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93704,"byte_end":93771,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93772,"byte_end":93836,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93837,"byte_end":93887,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93888,"byte_end":93891,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93892,"byte_end":93906,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93907,"byte_end":93910,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93911,"byte_end":93918,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93919,"byte_end":93978,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93979,"byte_end":93982,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93983,"byte_end":94036,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94037,"byte_end":94040,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94041,"byte_end":94116,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94117,"byte_end":94149,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94150,"byte_end":94182,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94183,"byte_end":94188,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94189,"byte_end":94233,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94234,"byte_end":94260,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94261,"byte_end":94338,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94339,"byte_end":94418,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94419,"byte_end":94432,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94433,"byte_end":94443,"line_start":44,"line_end":44,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94444,"byte_end":94449,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94450,"byte_end":94457,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4945},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4948},{"krate":0,"index":4949}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":4976}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4997},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5029},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5034},{"krate":0,"index":5035},{"krate":0,"index":5036},{"krate":0,"index":5037}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5063},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5068},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5071}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5102},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5108},{"krate":0,"index":5109},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5112}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5143},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5149},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":5153}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":95871,"byte_end":95885,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5198},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5201}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":585},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99867,"byte_end":99875,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn <Fut1, Fut2> (future1: Fut1, future2: Fut2) -> TryJoin<Fut1, Fut2>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98633,"byte_end":98706,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98707,"byte_end":98739,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98740,"byte_end":98743,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98744,"byte_end":98815,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98816,"byte_end":98892,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98893,"byte_end":98964,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98965,"byte_end":98981,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98982,"byte_end":98985,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":98986,"byte_end":99055,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99056,"byte_end":99082,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99083,"byte_end":99086,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99087,"byte_end":99101,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99102,"byte_end":99105,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99106,"byte_end":99182,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99183,"byte_end":99219,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99220,"byte_end":99223,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99224,"byte_end":99231,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99232,"byte_end":99273,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99274,"byte_end":99298,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99299,"byte_end":99302,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99303,"byte_end":99348,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99349,"byte_end":99394,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99395,"byte_end":99433,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99434,"byte_end":99437,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99438,"byte_end":99477,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99478,"byte_end":99487,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99488,"byte_end":99495,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99496,"byte_end":99499,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99500,"byte_end":99570,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99571,"byte_end":99586,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99587,"byte_end":99590,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99591,"byte_end":99598,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99599,"byte_end":99640,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99641,"byte_end":99665,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99666,"byte_end":99669,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99670,"byte_end":99715,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99716,"byte_end":99762,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99763,"byte_end":99801,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99802,"byte_end":99805,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99806,"byte_end":99841,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99842,"byte_end":99851,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":99852,"byte_end":99859,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100468,"byte_end":100477,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn <Fut1, Fut2, Fut3> (future1: Fut1, future2: Fut2, future3: Fut3) -> TryJoin3<Fut1, Fut2, Fut3>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100050,"byte_end":100110,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100111,"byte_end":100114,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100115,"byte_end":100129,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100130,"byte_end":100133,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100134,"byte_end":100141,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100142,"byte_end":100183,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100184,"byte_end":100208,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100209,"byte_end":100212,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100213,"byte_end":100258,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100259,"byte_end":100304,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100305,"byte_end":100350,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100351,"byte_end":100394,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100395,"byte_end":100398,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100399,"byte_end":100442,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100443,"byte_end":100452,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100453,"byte_end":100460,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101217,"byte_end":101226,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn <Fut1, Fut2, Fut3, Fut4> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4) -> TryJoin4<Fut1, Fut2, Fut3, Fut4>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100747,"byte_end":100807,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100808,"byte_end":100811,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100812,"byte_end":100826,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100827,"byte_end":100830,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100831,"byte_end":100838,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100839,"byte_end":100880,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100881,"byte_end":100905,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100906,"byte_end":100909,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100910,"byte_end":100955,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":100956,"byte_end":101001,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101002,"byte_end":101047,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101048,"byte_end":101093,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101094,"byte_end":101140,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101141,"byte_end":101144,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101145,"byte_end":101191,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101192,"byte_end":101201,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101202,"byte_end":101209,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":597},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":102100,"byte_end":102109,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn <Fut1, Fut2, Fut3, Fut4, Fut5> (future1: Fut1, future2: Fut2, future3: Fut3, future4: Fut4, future5: Fut5) -> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101578,"byte_end":101638,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101639,"byte_end":101642,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101643,"byte_end":101657,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101658,"byte_end":101661,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101662,"byte_end":101669,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101670,"byte_end":101711,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101712,"byte_end":101736,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101737,"byte_end":101740,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101741,"byte_end":101786,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101787,"byte_end":101832,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101833,"byte_end":101878,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101879,"byte_end":101924,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101925,"byte_end":101970,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":101971,"byte_end":102020,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":102021,"byte_end":102024,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":102025,"byte_end":102074,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":102075,"byte_end":102084,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_join.rs","byte_start":102085,"byte_end":102092,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102837,"byte_end":102846,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5240}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102695,"byte_end":102740,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102741,"byte_end":102808,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":626},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104431,"byte_end":104441,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn <A, B> (future1: A, future2: B) -> TrySelect<A, B>","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102940,"byte_end":103010,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103011,"byte_end":103014,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103015,"byte_end":103093,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103094,"byte_end":103170,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103171,"byte_end":103243,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103244,"byte_end":103247,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103248,"byte_end":103320,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103321,"byte_end":103349,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103350,"byte_end":103353,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103354,"byte_end":103421,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103422,"byte_end":103493,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103494,"byte_end":103544,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103545,"byte_end":103548,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103549,"byte_end":103563,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103564,"byte_end":103567,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103568,"byte_end":103575,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103576,"byte_end":103660,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103661,"byte_end":103664,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103665,"byte_end":103722,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103723,"byte_end":103726,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103727,"byte_end":103809,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103810,"byte_end":103867,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103868,"byte_end":103925,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103926,"byte_end":103952,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103953,"byte_end":103958,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":103959,"byte_end":104054,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104055,"byte_end":104078,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104079,"byte_end":104159,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104160,"byte_end":104241,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104242,"byte_end":104312,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104313,"byte_end":104384,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104385,"byte_end":104398,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104399,"byte_end":104409,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104410,"byte_end":104415,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104416,"byte_end":104423,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5248},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106036,"byte_end":106040,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106003,"byte_end":106031,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106090,"byte_end":106095,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5245},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106056,"byte_end":106085,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5245},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":105984,"byte_end":105990,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"Either::{Left, Right}","parent":null,"children":[{"krate":0,"index":5248},{"krate":0,"index":5250}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":105936,"byte_end":105950,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5282},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":105984,"byte_end":105990,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106301,"byte_end":106313,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn (self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106153,"byte_end":106211,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106216,"byte_end":106219,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106224,"byte_end":106289,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106693,"byte_end":106706,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn (self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106544,"byte_end":106602,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106607,"byte_end":106610,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106615,"byte_end":106681,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106994,"byte_end":107004,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106921,"byte_end":106982,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":687},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":692},{"krate":0,"index":1481},{"krate":0,"index":1509},{"krate":0,"index":1974},{"krate":0,"index":1995},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2209}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":113879,"byte_end":113890,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":113891,"byte_end":113894,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":113895,"byte_end":113969,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":113970,"byte_end":114048,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/mod.rs","byte_start":114049,"byte_end":114078,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163188,"byte_end":163193,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163128,"byte_end":163176,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163096,"byte_end":163110,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5341},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163188,"byte_end":163193,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":5345},{"krate":0,"index":5346},{"krate":0,"index":5347}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165355,"byte_end":165362,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5376}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165276,"byte_end":165343,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165244,"byte_end":165258,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5398},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165355,"byte_end":165362,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":5402},{"krate":0,"index":5403}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5429},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166822,"byte_end":166828,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5432},{"krate":0,"index":5431}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166743,"byte_end":166810,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166711,"byte_end":166725,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5450},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166822,"byte_end":166828,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":5453},{"krate":0,"index":5454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5474},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168612,"byte_end":168621,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5477},{"krate":0,"index":5476}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168552,"byte_end":168600,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168520,"byte_end":168534,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168612,"byte_end":168621,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5499}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5523},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170316,"byte_end":170322,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5529},{"krate":0,"index":5527},{"krate":0,"index":5530},{"krate":0,"index":5528}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170256,"byte_end":170304,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170241,"byte_end":170255,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5558},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170316,"byte_end":170322,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":5563},{"krate":0,"index":5564},{"krate":0,"index":5565}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5596},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173654,"byte_end":173663,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5601},{"krate":0,"index":5600},{"krate":0,"index":5602}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173594,"byte_end":173642,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173579,"byte_end":173593,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5628},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173654,"byte_end":173663,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5635}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176736,"byte_end":176743,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5669},{"krate":0,"index":5670}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176676,"byte_end":176724,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176644,"byte_end":176658,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5691},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176736,"byte_end":176743,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5695},{"krate":0,"index":5696},{"krate":0,"index":5697}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5729},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5731}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5747},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5750},{"krate":0,"index":5751}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5787},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178545,"byte_end":178549,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5794},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5795}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178466,"byte_end":178533,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178451,"byte_end":178465,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178545,"byte_end":178549,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":5832},{"krate":0,"index":5833},{"krate":0,"index":5834}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5866},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181091,"byte_end":181098,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5871},{"krate":0,"index":5870},{"krate":0,"index":5872}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181012,"byte_end":181079,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":180997,"byte_end":181011,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5898},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181091,"byte_end":181098,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":5903},{"krate":0,"index":5904},{"krate":0,"index":5905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5932},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183117,"byte_end":183121,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5935},{"krate":0,"index":5934}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183057,"byte_end":183105,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183025,"byte_end":183039,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5953},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183117,"byte_end":183121,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":5956},{"krate":0,"index":5957}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183559,"byte_end":183566,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183290,"byte_end":183352,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183357,"byte_end":183360,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183365,"byte_end":183433,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183438,"byte_end":183504,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183509,"byte_end":183547,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5981},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":184959,"byte_end":184971,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5983}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":184789,"byte_end":184862,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":184880,"byte_end":184947,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185554,"byte_end":185561,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn (&self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185162,"byte_end":185235,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185240,"byte_end":185257,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185262,"byte_end":185265,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185270,"byte_end":185351,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185356,"byte_end":185438,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185443,"byte_end":185522,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185527,"byte_end":185542,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186172,"byte_end":186179,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn (&mut self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185626,"byte_end":185693,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185698,"byte_end":185729,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185734,"byte_end":185737,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185742,"byte_end":185815,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185820,"byte_end":185875,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185880,"byte_end":185883,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185888,"byte_end":185969,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185974,"byte_end":186056,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186061,"byte_end":186140,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186145,"byte_end":186160,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186805,"byte_end":186816,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186252,"byte_end":186326,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186331,"byte_end":186362,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186367,"byte_end":186370,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186375,"byte_end":186448,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186453,"byte_end":186508,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186513,"byte_end":186516,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186521,"byte_end":186602,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186607,"byte_end":186689,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186694,"byte_end":186773,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186778,"byte_end":186793,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187453,"byte_end":187463,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn (self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":186933,"byte_end":186995,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187000,"byte_end":187003,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187008,"byte_end":187080,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187085,"byte_end":187156,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187161,"byte_end":187164,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187169,"byte_end":187250,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187255,"byte_end":187337,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187342,"byte_end":187421,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187426,"byte_end":187441,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":5990},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":5993}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6012},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":6016},{"krate":0,"index":6017}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6063},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188479,"byte_end":188482,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6067},{"krate":0,"index":6066}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188419,"byte_end":188467,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188404,"byte_end":188418,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6088},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188479,"byte_end":188482,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":6092},{"krate":0,"index":6093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6124},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6128}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6150},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":6155},{"krate":0,"index":6156}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6212},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190220,"byte_end":190224,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6215}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190064,"byte_end":190123,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190141,"byte_end":190208,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6220},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191230,"byte_end":191244,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6223}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191046,"byte_end":191121,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191122,"byte_end":191133,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191151,"byte_end":191218,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6228},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192738,"byte_end":192746,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6231},{"krate":0,"index":6230}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192678,"byte_end":192726,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192646,"byte_end":192660,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6249},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192738,"byte_end":192746,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":6252},{"krate":0,"index":6253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":193213,"byte_end":193217,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn (self: Pin<&mut Self>) -> Peek<'_, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":193058,"byte_end":193131,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":193136,"byte_end":193201,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6276},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":193557,"byte_end":193566,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6278},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195345,"byte_end":195349,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6281}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195285,"byte_end":195333,"line_start":109,"line_end":109,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195270,"byte_end":195284,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6300},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195345,"byte_end":195349,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":6304},{"krate":0,"index":6305}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6326},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196612,"byte_end":196616,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6329},{"krate":0,"index":6328}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196552,"byte_end":196600,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196520,"byte_end":196534,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6347},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196612,"byte_end":196616,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":6350},{"krate":0,"index":6351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6375},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198508,"byte_end":198517,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6382},{"krate":0,"index":6379},{"krate":0,"index":6383},{"krate":0,"index":6380},{"krate":0,"index":6381}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198448,"byte_end":198496,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198433,"byte_end":198447,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6413},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198508,"byte_end":198517,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6420}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6451},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202161,"byte_end":202165,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6454},{"krate":0,"index":6453}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202101,"byte_end":202149,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202069,"byte_end":202083,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6472},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202161,"byte_end":202165,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":6475},{"krate":0,"index":6476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6500},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204256,"byte_end":204265,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6507},{"krate":0,"index":6504},{"krate":0,"index":6508},{"krate":0,"index":6505},{"krate":0,"index":6506}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204196,"byte_end":204244,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204181,"byte_end":204195,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6538},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204256,"byte_end":204265,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6576},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":207885,"byte_end":207894,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6579},{"krate":0,"index":6580}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":207825,"byte_end":207873,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":207810,"byte_end":207824,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6607},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":207885,"byte_end":207894,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209251,"byte_end":209262,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn (&mut self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":208951,"byte_end":209005,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209010,"byte_end":209104,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209109,"byte_end":209172,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209177,"byte_end":209239,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210546,"byte_end":210557,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn (&mut self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209399,"byte_end":209464,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209469,"byte_end":209526,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209531,"byte_end":209534,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209539,"byte_end":209604,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209609,"byte_end":209669,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209674,"byte_end":209677,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209682,"byte_end":209750,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209755,"byte_end":209798,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209803,"byte_end":209806,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209811,"byte_end":209825,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209830,"byte_end":209833,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209838,"byte_end":209845,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209850,"byte_end":209891,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209896,"byte_end":209920,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209925,"byte_end":209968,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":209973,"byte_end":210001,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210006,"byte_end":210009,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210014,"byte_end":210052,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210057,"byte_end":210060,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210065,"byte_end":210083,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210088,"byte_end":210130,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210135,"byte_end":210150,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210155,"byte_end":210174,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210179,"byte_end":210204,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210209,"byte_end":210225,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210230,"byte_end":210263,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210268,"byte_end":210277,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210282,"byte_end":210289,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210294,"byte_end":210297,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210302,"byte_end":210351,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210356,"byte_end":210410,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210415,"byte_end":210418,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210423,"byte_end":210470,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210475,"byte_end":210508,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210513,"byte_end":210522,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210527,"byte_end":210534,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210733,"byte_end":210743,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210636,"byte_end":210697,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210702,"byte_end":210721,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6639},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212682,"byte_end":212686,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6644},{"krate":0,"index":6645},{"krate":0,"index":6643}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212622,"byte_end":212670,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212607,"byte_end":212621,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6671},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212682,"byte_end":212686,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":6678}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6709},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215373,"byte_end":215376,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6712},{"krate":0,"index":6713}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215313,"byte_end":215361,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215281,"byte_end":215295,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6740},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215373,"byte_end":215376,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215929,"byte_end":215936,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215821,"byte_end":215895,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215900,"byte_end":215917,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216292,"byte_end":216299,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216030,"byte_end":216098,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216103,"byte_end":216134,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216139,"byte_end":216142,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216147,"byte_end":216220,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216225,"byte_end":216280,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216674,"byte_end":216685,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216405,"byte_end":216480,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216485,"byte_end":216516,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216521,"byte_end":216524,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216529,"byte_end":216602,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216607,"byte_end":216662,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217191,"byte_end":217201,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":216955,"byte_end":217018,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217023,"byte_end":217026,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217031,"byte_end":217103,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217108,"byte_end":217179,"line_start":61,"line_end":61,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6772},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220041,"byte_end":220045,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6778},{"krate":0,"index":6777},{"krate":0,"index":6779}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":219981,"byte_end":220029,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":219966,"byte_end":219980,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6808},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220041,"byte_end":220045,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6816}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122691,"byte_end":122700,"line_start":198,"line_end":198,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1479},{"krate":0,"index":1480}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122580,"byte_end":122654,"line_start":196,"line_end":196,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122655,"byte_end":122680,"line_start":197,"line_end":197,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123610,"byte_end":123614,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn (&mut self) -> Next<'_, Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122715,"byte_end":122781,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122786,"byte_end":122789,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122794,"byte_end":122862,"line_start":201,"line_end":201,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122867,"byte_end":122942,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122947,"byte_end":123022,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123027,"byte_end":123081,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123086,"byte_end":123161,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123166,"byte_end":123176,"line_start":206,"line_end":206,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123181,"byte_end":123184,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123189,"byte_end":123203,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123208,"byte_end":123211,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123216,"byte_end":123223,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123228,"byte_end":123269,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123274,"byte_end":123317,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123322,"byte_end":123325,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123330,"byte_end":123371,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123376,"byte_end":123379,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123384,"byte_end":123429,"line_start":216,"line_end":216,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123434,"byte_end":123479,"line_start":217,"line_end":217,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123484,"byte_end":123529,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123534,"byte_end":123576,"line_start":219,"line_end":219,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123581,"byte_end":123590,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123595,"byte_end":123602,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124813,"byte_end":124824,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn (self) -> StreamFuture<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123716,"byte_end":123788,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123793,"byte_end":123854,"line_start":230,"line_end":230,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123859,"byte_end":123862,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123867,"byte_end":123942,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":123947,"byte_end":124001,"line_start":233,"line_end":233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124006,"byte_end":124009,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124014,"byte_end":124087,"line_start":235,"line_end":235,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124092,"byte_end":124154,"line_start":236,"line_end":236,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124159,"byte_end":124234,"line_start":237,"line_end":237,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124239,"byte_end":124293,"line_start":238,"line_end":238,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124298,"byte_end":124373,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124378,"byte_end":124388,"line_start":240,"line_end":240,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124393,"byte_end":124396,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124401,"byte_end":124415,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124420,"byte_end":124423,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124428,"byte_end":124435,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124440,"byte_end":124481,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124486,"byte_end":124529,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124534,"byte_end":124537,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124542,"byte_end":124579,"line_start":248,"line_end":248,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124584,"byte_end":124587,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124592,"byte_end":124644,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124649,"byte_end":124679,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124684,"byte_end":124687,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124692,"byte_end":124744,"line_start":253,"line_end":253,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124749,"byte_end":124779,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124784,"byte_end":124793,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124798,"byte_end":124805,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125777,"byte_end":125780,"line_start":287,"line_end":287,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn <T, F> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":124941,"byte_end":125016,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125021,"byte_end":125044,"line_start":265,"line_end":265,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125049,"byte_end":125052,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125057,"byte_end":125129,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125134,"byte_end":125198,"line_start":268,"line_end":268,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125203,"byte_end":125240,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125245,"byte_end":125248,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125253,"byte_end":125329,"line_start":271,"line_end":271,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125334,"byte_end":125405,"line_start":272,"line_end":272,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125410,"byte_end":125431,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125436,"byte_end":125439,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125444,"byte_end":125458,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125463,"byte_end":125466,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125471,"byte_end":125478,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125483,"byte_end":125524,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125529,"byte_end":125572,"line_start":279,"line_end":279,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125577,"byte_end":125580,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125585,"byte_end":125622,"line_start":281,"line_end":281,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125627,"byte_end":125666,"line_start":282,"line_end":282,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125671,"byte_end":125674,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125679,"byte_end":125743,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125748,"byte_end":125757,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125762,"byte_end":125769,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127312,"byte_end":127321,"line_start":333,"line_end":333,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":125924,"byte_end":125995,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126000,"byte_end":126019,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126024,"byte_end":126027,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126032,"byte_end":126097,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126102,"byte_end":126171,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126176,"byte_end":126187,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126192,"byte_end":126195,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126200,"byte_end":126275,"line_start":302,"line_end":302,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126280,"byte_end":126362,"line_start":303,"line_end":303,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126367,"byte_end":126385,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126390,"byte_end":126393,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126398,"byte_end":126421,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126426,"byte_end":126429,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126434,"byte_end":126509,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/ [`usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126514,"byte_end":126596,"line_start":309,"line_end":309,"column_start":5,"column_end":87}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126601,"byte_end":126657,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126662,"byte_end":126665,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126670,"byte_end":126682,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126687,"byte_end":126690,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126695,"byte_end":126764,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126769,"byte_end":126794,"line_start":315,"line_end":315,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126799,"byte_end":126802,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126807,"byte_end":126821,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126826,"byte_end":126829,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126834,"byte_end":126841,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126846,"byte_end":126887,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126892,"byte_end":126935,"line_start":321,"line_end":321,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126940,"byte_end":126943,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":126948,"byte_end":126999,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127004,"byte_end":127007,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127012,"byte_end":127052,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127057,"byte_end":127060,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127065,"byte_end":127117,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127122,"byte_end":127174,"line_start":328,"line_end":328,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127179,"byte_end":127231,"line_start":329,"line_end":329,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127236,"byte_end":127278,"line_start":330,"line_end":330,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127283,"byte_end":127292,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127297,"byte_end":127304,"line_start":332,"line_end":332,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128509,"byte_end":128515,"line_start":366,"line_end":366,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn <Fut, F> (self, f: F) -> Filter<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127424,"byte_end":127496,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127501,"byte_end":127528,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127533,"byte_end":127536,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127541,"byte_end":127616,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127621,"byte_end":127692,"line_start":344,"line_end":344,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127697,"byte_end":127769,"line_start":345,"line_end":345,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127774,"byte_end":127848,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127853,"byte_end":127911,"line_start":347,"line_end":347,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127916,"byte_end":127919,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":127924,"byte_end":128000,"line_start":349,"line_end":349,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128005,"byte_end":128079,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128084,"byte_end":128105,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128110,"byte_end":128113,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128118,"byte_end":128132,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128137,"byte_end":128140,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128145,"byte_end":128152,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128157,"byte_end":128198,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128203,"byte_end":128227,"line_start":357,"line_end":357,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128232,"byte_end":128275,"line_start":358,"line_end":358,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128280,"byte_end":128283,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128288,"byte_end":128326,"line_start":360,"line_end":360,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128331,"byte_end":128392,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128397,"byte_end":128400,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128405,"byte_end":128475,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128480,"byte_end":128489,"line_start":364,"line_end":364,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128494,"byte_end":128501,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129808,"byte_end":129818,"line_start":400,"line_end":400,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn <Fut, T, F> (self, f: F) -> FilterMap<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128711,"byte_end":128786,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128791,"byte_end":128867,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128872,"byte_end":128875,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128880,"byte_end":128955,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":128960,"byte_end":129035,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129040,"byte_end":129116,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129121,"byte_end":129186,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129191,"byte_end":129194,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129199,"byte_end":129275,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129280,"byte_end":129354,"line_start":384,"line_end":384,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129359,"byte_end":129384,"line_start":385,"line_end":385,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129389,"byte_end":129392,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129397,"byte_end":129411,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129416,"byte_end":129423,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129428,"byte_end":129469,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129474,"byte_end":129517,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129522,"byte_end":129525,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129530,"byte_end":129568,"line_start":392,"line_end":392,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129573,"byte_end":129623,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129628,"byte_end":129679,"line_start":394,"line_end":394,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129684,"byte_end":129691,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129696,"byte_end":129699,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129704,"byte_end":129774,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129779,"byte_end":129788,"line_start":398,"line_end":398,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":129793,"byte_end":129800,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130824,"byte_end":130828,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn <Fut, F> (self, f: F) -> Then<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130027,"byte_end":130100,"line_start":409,"line_end":409,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130105,"byte_end":130133,"line_start":410,"line_end":410,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130138,"byte_end":130141,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130146,"byte_end":130220,"line_start":412,"line_end":412,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130225,"byte_end":130292,"line_start":413,"line_end":413,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130297,"byte_end":130342,"line_start":414,"line_end":414,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130347,"byte_end":130350,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130355,"byte_end":130431,"line_start":416,"line_end":416,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130436,"byte_end":130462,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130467,"byte_end":130470,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130475,"byte_end":130489,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130494,"byte_end":130497,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130502,"byte_end":130509,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130514,"byte_end":130555,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130560,"byte_end":130603,"line_start":423,"line_end":423,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130608,"byte_end":130611,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130616,"byte_end":130653,"line_start":425,"line_end":425,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130658,"byte_end":130713,"line_start":426,"line_end":426,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130718,"byte_end":130721,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130726,"byte_end":130790,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130795,"byte_end":130804,"line_start":429,"line_end":429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":130809,"byte_end":130816,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131729,"byte_end":131736,"line_start":465,"line_end":465,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn <C> (self) -> Collect<Self, C>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131004,"byte_end":131058,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131063,"byte_end":131118,"line_start":441,"line_end":441,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131123,"byte_end":131126,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131131,"byte_end":131199,"line_start":443,"line_end":443,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131204,"byte_end":131207,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131212,"byte_end":131226,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131231,"byte_end":131234,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131239,"byte_end":131246,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131251,"byte_end":131292,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131297,"byte_end":131328,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131333,"byte_end":131368,"line_start":450,"line_end":450,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131373,"byte_end":131393,"line_start":451,"line_end":451,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131398,"byte_end":131401,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131406,"byte_end":131443,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131448,"byte_end":131451,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131456,"byte_end":131483,"line_start":455,"line_end":455,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131488,"byte_end":131512,"line_start":456,"line_end":456,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131517,"byte_end":131559,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131564,"byte_end":131573,"line_start":458,"line_end":458,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131578,"byte_end":131585,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131590,"byte_end":131593,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131598,"byte_end":131646,"line_start":461,"line_end":461,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131651,"byte_end":131695,"line_start":462,"line_end":462,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131700,"byte_end":131709,"line_start":463,"line_end":463,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131714,"byte_end":131721,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132906,"byte_end":132912,"line_start":504,"line_end":504,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn (self) -> Concat<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131871,"byte_end":131933,"line_start":472,"line_end":472,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":131938,"byte_end":132002,"line_start":473,"line_end":473,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132007,"byte_end":132010,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132015,"byte_end":132079,"line_start":475,"line_end":475,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132084,"byte_end":132149,"line_start":476,"line_end":476,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132154,"byte_end":132200,"line_start":477,"line_end":477,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132205,"byte_end":132208,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132213,"byte_end":132262,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132267,"byte_end":132307,"line_start":480,"line_end":480,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132312,"byte_end":132315,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132320,"byte_end":132334,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132339,"byte_end":132342,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132347,"byte_end":132354,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132359,"byte_end":132400,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132405,"byte_end":132436,"line_start":486,"line_end":486,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132441,"byte_end":132476,"line_start":487,"line_end":487,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132481,"byte_end":132501,"line_start":488,"line_end":488,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132506,"byte_end":132509,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132514,"byte_end":132551,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132556,"byte_end":132559,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132564,"byte_end":132591,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132596,"byte_end":132627,"line_start":493,"line_end":493,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132632,"byte_end":132658,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132663,"byte_end":132729,"line_start":495,"line_end":495,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132734,"byte_end":132743,"line_start":496,"line_end":496,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132748,"byte_end":132755,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132760,"byte_end":132763,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132768,"byte_end":132803,"line_start":499,"line_end":499,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132808,"byte_end":132811,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132816,"byte_end":132872,"line_start":501,"line_end":501,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132877,"byte_end":132886,"line_start":502,"line_end":502,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":132891,"byte_end":132898,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133925,"byte_end":133929,"line_start":532,"line_end":532,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> Fold<Self, Fut, T, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133110,"byte_end":133177,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133182,"byte_end":133234,"line_start":513,"line_end":513,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133239,"byte_end":133242,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133247,"byte_end":133317,"line_start":515,"line_end":515,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133322,"byte_end":133398,"line_start":516,"line_end":516,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133403,"byte_end":133479,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133484,"byte_end":133554,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133559,"byte_end":133585,"line_start":519,"line_end":519,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133590,"byte_end":133593,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133598,"byte_end":133612,"line_start":521,"line_end":521,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133617,"byte_end":133620,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133625,"byte_end":133632,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133637,"byte_end":133678,"line_start":524,"line_end":524,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133683,"byte_end":133726,"line_start":525,"line_end":525,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133731,"byte_end":133734,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133739,"byte_end":133782,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133787,"byte_end":133856,"line_start":528,"line_end":528,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133861,"byte_end":133891,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133896,"byte_end":133905,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":133910,"byte_end":133917,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135100,"byte_end":135107,"line_start":572,"line_end":572,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134141,"byte_end":134206,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134211,"byte_end":134214,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134219,"byte_end":134233,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134238,"byte_end":134241,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134246,"byte_end":134253,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134258,"byte_end":134299,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134304,"byte_end":134335,"line_start":547,"line_end":547,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134340,"byte_end":134375,"line_start":548,"line_end":548,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134380,"byte_end":134400,"line_start":549,"line_end":549,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134405,"byte_end":134408,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134413,"byte_end":134452,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134457,"byte_end":134496,"line_start":552,"line_end":552,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134501,"byte_end":134540,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134545,"byte_end":134548,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134553,"byte_end":134580,"line_start":555,"line_end":555,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134585,"byte_end":134624,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134629,"byte_end":134668,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134673,"byte_end":134680,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134685,"byte_end":134712,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134717,"byte_end":134756,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134761,"byte_end":134800,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134805,"byte_end":134812,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134817,"byte_end":134844,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134849,"byte_end":134890,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134895,"byte_end":134936,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134941,"byte_end":134948,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134953,"byte_end":134956,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":134961,"byte_end":135020,"line_start":568,"line_end":568,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135025,"byte_end":135066,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135071,"byte_end":135080,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135085,"byte_end":135092,"line_start":571,"line_end":571,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136319,"byte_end":136327,"line_start":605,"line_end":605,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn <U, F> (self, f: F) -> FlatMap<Self, U, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135234,"byte_end":135306,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135311,"byte_end":135314,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135319,"byte_end":135396,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135401,"byte_end":135476,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135481,"byte_end":135557,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135562,"byte_end":135565,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135570,"byte_end":135652,"line_start":586,"line_end":586,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135657,"byte_end":135740,"line_start":587,"line_end":587,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135745,"byte_end":135748,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135753,"byte_end":135829,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135834,"byte_end":135910,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135915,"byte_end":135936,"line_start":591,"line_end":591,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135941,"byte_end":135944,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135949,"byte_end":135963,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135968,"byte_end":135971,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135976,"byte_end":135983,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":135988,"byte_end":136029,"line_start":596,"line_end":596,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136034,"byte_end":136077,"line_start":597,"line_end":597,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136082,"byte_end":136085,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136090,"byte_end":136127,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136132,"byte_end":136199,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136204,"byte_end":136207,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136212,"byte_end":136285,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136290,"byte_end":136299,"line_start":603,"line_end":603,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136304,"byte_end":136311,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137311,"byte_end":137315,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn <S, B, Fut, F> (self, initial_state: S, f: F) -> Scan<Self, S, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state \n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state ","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136501,"byte_end":136573,"line_start":614,"line_end":614,"column_start":5,"column_end":77}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136578,"byte_end":136608,"line_start":615,"line_end":615,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136613,"byte_end":136616,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136621,"byte_end":136696,"line_start":617,"line_end":617,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136701,"byte_end":136772,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136777,"byte_end":136817,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136822,"byte_end":136825,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136830,"byte_end":136844,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136849,"byte_end":136852,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136857,"byte_end":136864,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136869,"byte_end":136910,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136915,"byte_end":136939,"line_start":625,"line_end":625,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136944,"byte_end":136987,"line_start":626,"line_end":626,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":136992,"byte_end":136995,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137000,"byte_end":137038,"line_start":628,"line_end":628,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137043,"byte_end":137046,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137051,"byte_end":137095,"line_start":630,"line_end":630,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137100,"byte_end":137120,"line_start":631,"line_end":631,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137125,"byte_end":137188,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137193,"byte_end":137200,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137205,"byte_end":137208,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137213,"byte_end":137277,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137282,"byte_end":137291,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137296,"byte_end":137303,"line_start":637,"line_end":637,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138339,"byte_end":138349,"line_start":669,"line_end":669,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn <Fut, F> (self, f: F) -> SkipWhile<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137561,"byte_end":137635,"line_start":647,"line_end":647,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137640,"byte_end":137663,"line_start":648,"line_end":648,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137668,"byte_end":137671,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137676,"byte_end":137749,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137754,"byte_end":137826,"line_start":651,"line_end":651,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137831,"byte_end":137908,"line_start":652,"line_end":652,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137913,"byte_end":137924,"line_start":653,"line_end":653,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137929,"byte_end":137932,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137937,"byte_end":137951,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137956,"byte_end":137959,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137964,"byte_end":137971,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":137976,"byte_end":138017,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138022,"byte_end":138046,"line_start":659,"line_end":659,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138051,"byte_end":138094,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138099,"byte_end":138102,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138107,"byte_end":138145,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138150,"byte_end":138153,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138158,"byte_end":138221,"line_start":664,"line_end":664,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138226,"byte_end":138229,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138234,"byte_end":138305,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138310,"byte_end":138319,"line_start":667,"line_end":667,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138324,"byte_end":138331,"line_start":668,"line_end":668,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139306,"byte_end":139316,"line_start":699,"line_end":699,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn <Fut, F> (self, f: F) -> TakeWhile<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138551,"byte_end":138627,"line_start":678,"line_end":678,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138632,"byte_end":138655,"line_start":679,"line_end":679,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138660,"byte_end":138663,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138668,"byte_end":138743,"line_start":681,"line_end":681,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138748,"byte_end":138820,"line_start":682,"line_end":682,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138825,"byte_end":138892,"line_start":683,"line_end":683,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138897,"byte_end":138900,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138905,"byte_end":138919,"line_start":685,"line_end":685,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138924,"byte_end":138927,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138932,"byte_end":138939,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138944,"byte_end":138985,"line_start":688,"line_end":688,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":138990,"byte_end":139014,"line_start":689,"line_end":689,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139019,"byte_end":139062,"line_start":690,"line_end":690,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139067,"byte_end":139070,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139075,"byte_end":139113,"line_start":692,"line_end":692,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139118,"byte_end":139121,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139126,"byte_end":139189,"line_start":694,"line_end":694,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139194,"byte_end":139197,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139202,"byte_end":139272,"line_start":696,"line_end":696,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139277,"byte_end":139286,"line_start":697,"line_end":697,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139291,"byte_end":139298,"line_start":698,"line_end":698,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140800,"byte_end":140810,"line_start":744,"line_end":744,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn <Fut> (self, fut: Fut) -> TakeUntil<Self, Fut>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139518,"byte_end":139588,"line_start":708,"line_end":708,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139593,"byte_end":139596,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139601,"byte_end":139672,"line_start":710,"line_end":710,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139677,"byte_end":139749,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139754,"byte_end":139824,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139829,"byte_end":139832,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139837,"byte_end":139908,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":139913,"byte_end":139999,"line_start":715,"line_end":715,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140004,"byte_end":140071,"line_start":716,"line_end":716,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140076,"byte_end":140140,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140145,"byte_end":140148,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140153,"byte_end":140167,"line_start":719,"line_end":719,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140172,"byte_end":140175,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140180,"byte_end":140187,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140192,"byte_end":140233,"line_start":722,"line_end":722,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140238,"byte_end":140262,"line_start":723,"line_end":723,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140267,"byte_end":140310,"line_start":724,"line_end":724,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140315,"byte_end":140343,"line_start":725,"line_end":725,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140348,"byte_end":140351,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140356,"byte_end":140394,"line_start":727,"line_end":727,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140399,"byte_end":140402,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140407,"byte_end":140425,"line_start":729,"line_end":729,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140430,"byte_end":140472,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140477,"byte_end":140492,"line_start":731,"line_end":731,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140497,"byte_end":140516,"line_start":732,"line_end":732,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140521,"byte_end":140546,"line_start":733,"line_end":733,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140551,"byte_end":140567,"line_start":734,"line_end":734,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140572,"byte_end":140599,"line_start":735,"line_end":735,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140604,"byte_end":140613,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140618,"byte_end":140625,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140630,"byte_end":140633,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140638,"byte_end":140683,"line_start":739,"line_end":739,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140688,"byte_end":140691,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140696,"byte_end":140766,"line_start":741,"line_end":741,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140771,"byte_end":140780,"line_start":742,"line_end":742,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140785,"byte_end":140792,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":142017,"byte_end":142025,"line_start":785,"line_end":785,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn <Fut, F> (self, f: F) -> ForEach<Self, Fut, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":140959,"byte_end":141030,"line_start":752,"line_end":752,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141035,"byte_end":141078,"line_start":753,"line_end":753,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141083,"byte_end":141086,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141091,"byte_end":141166,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141171,"byte_end":141241,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141246,"byte_end":141284,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141289,"byte_end":141292,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141297,"byte_end":141372,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141377,"byte_end":141420,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141425,"byte_end":141428,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141433,"byte_end":141506,"line_start":762,"line_end":762,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141511,"byte_end":141554,"line_start":763,"line_end":763,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141559,"byte_end":141562,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141567,"byte_end":141581,"line_start":765,"line_end":765,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141586,"byte_end":141589,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141594,"byte_end":141601,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141606,"byte_end":141647,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141652,"byte_end":141676,"line_start":769,"line_end":769,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141681,"byte_end":141724,"line_start":770,"line_end":770,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141729,"byte_end":141732,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141737,"byte_end":141755,"line_start":772,"line_end":772,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141760,"byte_end":141763,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141768,"byte_end":141773,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141778,"byte_end":141839,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141844,"byte_end":141866,"line_start":776,"line_end":776,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141871,"byte_end":141900,"line_start":777,"line_end":777,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141905,"byte_end":141916,"line_start":778,"line_end":778,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141921,"byte_end":141939,"line_start":779,"line_end":779,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141944,"byte_end":141949,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141954,"byte_end":141957,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141962,"byte_end":141983,"line_start":782,"line_end":782,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":141988,"byte_end":141997,"line_start":783,"line_end":783,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":142002,"byte_end":142009,"line_start":784,"line_end":784,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145027,"byte_end":145031,"line_start":870,"line_end":870,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144519,"byte_end":144590,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144595,"byte_end":144598,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144603,"byte_end":144676,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144681,"byte_end":144716,"line_start":857,"line_end":857,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144721,"byte_end":144724,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144729,"byte_end":144743,"line_start":859,"line_end":859,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144748,"byte_end":144751,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144756,"byte_end":144763,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144768,"byte_end":144809,"line_start":862,"line_end":862,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144814,"byte_end":144857,"line_start":863,"line_end":863,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144862,"byte_end":144865,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144870,"byte_end":144916,"line_start":865,"line_end":865,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144921,"byte_end":144924,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144929,"byte_end":144993,"line_start":867,"line_end":867,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":144998,"byte_end":145007,"line_start":868,"line_end":868,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145012,"byte_end":145019,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145664,"byte_end":145668,"line_start":893,"line_end":893,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145137,"byte_end":145209,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145214,"byte_end":145217,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145222,"byte_end":145295,"line_start":879,"line_end":879,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145300,"byte_end":145346,"line_start":880,"line_end":880,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145351,"byte_end":145354,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145359,"byte_end":145373,"line_start":882,"line_end":882,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145378,"byte_end":145381,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145386,"byte_end":145393,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145398,"byte_end":145439,"line_start":885,"line_end":885,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145444,"byte_end":145487,"line_start":886,"line_end":886,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145492,"byte_end":145495,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145500,"byte_end":145546,"line_start":888,"line_end":888,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145551,"byte_end":145554,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145559,"byte_end":145630,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145635,"byte_end":145644,"line_start":891,"line_end":891,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145649,"byte_end":145656,"line_start":892,"line_end":892,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147257,"byte_end":147261,"line_start":939,"line_end":939,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145774,"byte_end":145845,"line_start":900,"line_end":900,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145850,"byte_end":145923,"line_start":901,"line_end":901,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145928,"byte_end":145966,"line_start":902,"line_end":902,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145971,"byte_end":145974,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":145979,"byte_end":146033,"line_start":904,"line_end":904,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146038,"byte_end":146110,"line_start":905,"line_end":905,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146115,"byte_end":146191,"line_start":906,"line_end":906,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146196,"byte_end":146264,"line_start":907,"line_end":907,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146269,"byte_end":146345,"line_start":908,"line_end":908,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146350,"byte_end":146372,"line_start":909,"line_end":909,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146377,"byte_end":146380,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146385,"byte_end":146452,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146457,"byte_end":146525,"line_start":912,"line_end":912,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146530,"byte_end":146543,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146548,"byte_end":146551,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146556,"byte_end":146570,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146575,"byte_end":146578,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146583,"byte_end":146590,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146595,"byte_end":146638,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146643,"byte_end":146686,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146691,"byte_end":146719,"line_start":920,"line_end":920,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146724,"byte_end":146727,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146732,"byte_end":146750,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146755,"byte_end":146793,"line_start":923,"line_end":923,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146798,"byte_end":146813,"line_start":924,"line_end":924,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146818,"byte_end":146835,"line_start":925,"line_end":925,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146840,"byte_end":146882,"line_start":926,"line_end":926,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146887,"byte_end":146922,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146927,"byte_end":146971,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146976,"byte_end":146985,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":146990,"byte_end":147004,"line_start":930,"line_end":930,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147009,"byte_end":147012,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147017,"byte_end":147060,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147065,"byte_end":147102,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147107,"byte_end":147144,"line_start":934,"line_end":934,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147149,"byte_end":147183,"line_start":935,"line_end":935,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147188,"byte_end":147222,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147227,"byte_end":147237,"line_start":937,"line_end":937,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147242,"byte_end":147249,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148158,"byte_end":148164,"line_start":972,"line_end":972,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147354,"byte_end":147401,"line_start":946,"line_end":946,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147406,"byte_end":147409,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147414,"byte_end":147488,"line_start":948,"line_end":948,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147493,"byte_end":147530,"line_start":949,"line_end":949,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147535,"byte_end":147538,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147543,"byte_end":147557,"line_start":951,"line_end":951,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147562,"byte_end":147565,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147570,"byte_end":147577,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147582,"byte_end":147623,"line_start":954,"line_end":954,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147628,"byte_end":147671,"line_start":955,"line_end":955,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147676,"byte_end":147679,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147684,"byte_end":147724,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147729,"byte_end":147732,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147737,"byte_end":147766,"line_start":959,"line_end":959,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147771,"byte_end":147799,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147804,"byte_end":147861,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147866,"byte_end":147893,"line_start":962,"line_end":962,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147898,"byte_end":147921,"line_start":963,"line_end":963,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147926,"byte_end":147929,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147934,"byte_end":147969,"line_start":965,"line_end":965,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":147974,"byte_end":148002,"line_start":966,"line_end":966,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148007,"byte_end":148064,"line_start":967,"line_end":967,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148069,"byte_end":148096,"line_start":968,"line_end":968,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148101,"byte_end":148124,"line_start":969,"line_end":969,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148129,"byte_end":148138,"line_start":970,"line_end":970,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":148143,"byte_end":148150,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154181,"byte_end":154184,"line_start":1139,"line_end":1139,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn <St> (self, other: St) -> Zip<Self, St>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153493,"byte_end":153541,"line_start":1117,"line_end":1117,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153546,"byte_end":153549,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153554,"byte_end":153627,"line_start":1119,"line_end":1119,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153632,"byte_end":153704,"line_start":1120,"line_end":1120,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153709,"byte_end":153722,"line_start":1121,"line_end":1121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153727,"byte_end":153730,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153735,"byte_end":153749,"line_start":1123,"line_end":1123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153754,"byte_end":153757,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153762,"byte_end":153769,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153774,"byte_end":153815,"line_start":1126,"line_end":1126,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153820,"byte_end":153863,"line_start":1127,"line_end":1127,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153868,"byte_end":153871,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153876,"byte_end":153914,"line_start":1129,"line_end":1129,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153919,"byte_end":153958,"line_start":1130,"line_end":1130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153963,"byte_end":153966,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":153971,"byte_end":154005,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154010,"byte_end":154051,"line_start":1133,"line_end":1133,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154056,"byte_end":154084,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154089,"byte_end":154139,"line_start":1135,"line_end":1135,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154144,"byte_end":154153,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154158,"byte_end":154165,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154170,"byte_end":154173,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155048,"byte_end":155053,"line_start":1170,"line_end":1170,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn <St> (self, other: St) -> Chain<Self, St>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154321,"byte_end":154358,"line_start":1147,"line_end":1147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154363,"byte_end":154366,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154371,"byte_end":154442,"line_start":1149,"line_end":1149,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154447,"byte_end":154523,"line_start":1150,"line_end":1150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154528,"byte_end":154531,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154536,"byte_end":154543,"line_start":1152,"line_end":1152,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154548,"byte_end":154589,"line_start":1153,"line_end":1153,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154594,"byte_end":154637,"line_start":1154,"line_end":1154,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154642,"byte_end":154645,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154650,"byte_end":154707,"line_start":1156,"line_end":1156,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154712,"byte_end":154768,"line_start":1157,"line_end":1157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154773,"byte_end":154776,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154781,"byte_end":154821,"line_start":1159,"line_end":1159,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154826,"byte_end":154829,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154834,"byte_end":154882,"line_start":1161,"line_end":1161,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154887,"byte_end":154915,"line_start":1162,"line_end":1162,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154920,"byte_end":154935,"line_start":1163,"line_end":1163,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154940,"byte_end":154959,"line_start":1164,"line_end":1164,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154964,"byte_end":154982,"line_start":1165,"line_end":1165,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":154987,"byte_end":155002,"line_start":1166,"line_end":1166,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155007,"byte_end":155014,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155019,"byte_end":155028,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155033,"byte_end":155040,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155359,"byte_end":155367,"line_start":1181,"line_end":1181,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155213,"byte_end":155268,"line_start":1178,"line_end":1178,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155273,"byte_end":155276,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":155281,"byte_end":155351,"line_start":1180,"line_end":1180,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159497,"byte_end":159504,"line_start":1283,"line_end":1283,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159194,"byte_end":159267,"line_start":1278,"line_end":1278,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159272,"byte_end":159275,"line_start":1279,"line_end":1279,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159280,"byte_end":159349,"line_start":1280,"line_end":1280,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159354,"byte_end":159423,"line_start":1281,"line_end":1281,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159428,"byte_end":159489,"line_start":1282,"line_end":1282,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159928,"byte_end":159939,"line_start":1296,"line_end":1296,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn <B> (self) -> Either<Self, B>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159649,"byte_end":159724,"line_start":1291,"line_end":1291,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159729,"byte_end":159750,"line_start":1292,"line_end":1292,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159755,"byte_end":159758,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159763,"byte_end":159843,"line_start":1294,"line_end":1294,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":159848,"byte_end":159920,"line_start":1295,"line_end":1295,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160360,"byte_end":160372,"line_start":1309,"line_end":1309,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn <B> (self) -> Either<B, Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160081,"byte_end":160157,"line_start":1304,"line_end":1304,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160162,"byte_end":160183,"line_start":1305,"line_end":1305,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160188,"byte_end":160191,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160196,"byte_end":160275,"line_start":1307,"line_end":1307,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160280,"byte_end":160352,"line_start":1308,"line_end":1308,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160616,"byte_end":160631,"line_start":1319,"line_end":1319,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160515,"byte_end":160586,"line_start":1317,"line_end":1317,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160591,"byte_end":160608,"line_start":1318,"line_end":1318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162732,"byte_end":162748,"line_start":1374,"line_end":1374,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn (&mut self) -> SelectNextSome<'_, Self>","parent":{"krate":0,"index":1420},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160778,"byte_end":160853,"line_start":1326,"line_end":1326,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160858,"byte_end":160868,"line_start":1327,"line_end":1327,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160873,"byte_end":160876,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160881,"byte_end":160954,"line_start":1329,"line_end":1329,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":160959,"byte_end":161027,"line_start":1330,"line_end":1330,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161032,"byte_end":161080,"line_start":1331,"line_end":1331,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161085,"byte_end":161160,"line_start":1332,"line_end":1332,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161165,"byte_end":161241,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161246,"byte_end":161272,"line_start":1334,"line_end":1334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161277,"byte_end":161280,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161285,"byte_end":161358,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161363,"byte_end":161433,"line_start":1337,"line_end":1337,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161438,"byte_end":161478,"line_start":1338,"line_end":1338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161483,"byte_end":161486,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161491,"byte_end":161545,"line_start":1340,"line_end":1340,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161550,"byte_end":161634,"line_start":1341,"line_end":1341,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161639,"byte_end":161642,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161647,"byte_end":161661,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161666,"byte_end":161669,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161674,"byte_end":161681,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161686,"byte_end":161727,"line_start":1346,"line_end":1346,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161732,"byte_end":161766,"line_start":1347,"line_end":1347,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161771,"byte_end":161826,"line_start":1348,"line_end":1348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161831,"byte_end":161834,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161839,"byte_end":161874,"line_start":1350,"line_end":1350,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161879,"byte_end":161929,"line_start":1351,"line_end":1351,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161934,"byte_end":161956,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161961,"byte_end":161971,"line_start":1353,"line_end":1353,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161976,"byte_end":161993,"line_start":1354,"line_end":1354,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":161998,"byte_end":162024,"line_start":1355,"line_end":1355,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162029,"byte_end":162084,"line_start":1356,"line_end":1356,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162089,"byte_end":162118,"line_start":1357,"line_end":1357,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162123,"byte_end":162186,"line_start":1358,"line_end":1358,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162191,"byte_end":162237,"line_start":1359,"line_end":1359,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162242,"byte_end":162256,"line_start":1360,"line_end":1360,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162261,"byte_end":162330,"line_start":1361,"line_end":1361,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162335,"byte_end":162360,"line_start":1362,"line_end":1362,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162365,"byte_end":162418,"line_start":1363,"line_end":1363,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162423,"byte_end":162452,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162457,"byte_end":162470,"line_start":1365,"line_end":1365,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162475,"byte_end":162545,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162550,"byte_end":162609,"line_start":1367,"line_end":1367,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162614,"byte_end":162644,"line_start":1368,"line_end":1368,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162649,"byte_end":162658,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162663,"byte_end":162668,"line_start":1370,"line_end":1370,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162673,"byte_end":162698,"line_start":1371,"line_end":1371,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162703,"byte_end":162712,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":162717,"byte_end":162724,"line_start":1373,"line_end":1373,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6852},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254060,"byte_end":254067,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6857},{"krate":0,"index":6858},{"krate":0,"index":6856}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254000,"byte_end":254048,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":253985,"byte_end":253999,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6884},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254060,"byte_end":254067,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":6889},{"krate":0,"index":6890},{"krate":0,"index":6891}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6925},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6928}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6947},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":6951},{"krate":0,"index":6952}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7001},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7004}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7023},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":7027},{"krate":0,"index":7028}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7077},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7080}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7099},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":7103},{"krate":0,"index":7104}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7150},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256857,"byte_end":256867,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7152}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256797,"byte_end":256845,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256765,"byte_end":256779,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7168},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256857,"byte_end":256867,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":7171},{"krate":0,"index":7172}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7198},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7201}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7220},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":7224},{"krate":0,"index":7225}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7274},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7277}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7296},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":10802,"byte_end":10829,"line_start":286,"line_end":286,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":7300},{"krate":0,"index":7301}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7347},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258199,"byte_end":258205,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7351}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258139,"byte_end":258187,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258124,"byte_end":258138,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7379},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258199,"byte_end":258205,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":7384},{"krate":0,"index":7385},{"krate":0,"index":7386}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7417},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261110,"byte_end":261117,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7420}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":260943,"byte_end":261013,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261031,"byte_end":261098,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7425},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262197,"byte_end":262207,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7430},{"krate":0,"index":7429},{"krate":0,"index":7431}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262118,"byte_end":262185,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262103,"byte_end":262117,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7457},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262197,"byte_end":262207,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7491},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264152,"byte_end":264161,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7497},{"krate":0,"index":7495},{"krate":0,"index":7498},{"krate":0,"index":7496}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264092,"byte_end":264140,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264077,"byte_end":264091,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7526},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264152,"byte_end":264161,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":7531},{"krate":0,"index":7532},{"krate":0,"index":7533}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7564},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267389,"byte_end":267401,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7569},{"krate":0,"index":7568},{"krate":0,"index":7570}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267329,"byte_end":267377,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267314,"byte_end":267328,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7596},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267389,"byte_end":267401,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7601},{"krate":0,"index":7602},{"krate":0,"index":7603}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7634},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270420,"byte_end":270430,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7637}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270360,"byte_end":270408,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270328,"byte_end":270342,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7655},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270420,"byte_end":270430,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7658},{"krate":0,"index":7659},{"krate":0,"index":7660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7684},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272579,"byte_end":272589,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7688},{"krate":0,"index":7687}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272500,"byte_end":272567,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272468,"byte_end":272482,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7709},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272579,"byte_end":272589,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":7713},{"krate":0,"index":7714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7740},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274003,"byte_end":274012,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7743},{"krate":0,"index":7742}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":273924,"byte_end":273991,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":273892,"byte_end":273906,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7761},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274003,"byte_end":274012,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":7764},{"krate":0,"index":7765}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7785},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275460,"byte_end":275467,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7792},{"krate":0,"index":7790},{"krate":0,"index":7791},{"krate":0,"index":7793}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275381,"byte_end":275448,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275366,"byte_end":275380,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7824},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275460,"byte_end":275467,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":7830},{"krate":0,"index":7831},{"krate":0,"index":7832}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279969,"byte_end":279979,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> TryUnfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278112,"byte_end":278188,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278189,"byte_end":278192,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278193,"byte_end":278269,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278270,"byte_end":278340,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278341,"byte_end":278400,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278401,"byte_end":278404,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278405,"byte_end":278483,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278484,"byte_end":278561,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278562,"byte_end":278626,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278627,"byte_end":278630,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278631,"byte_end":278703,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278704,"byte_end":278782,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278783,"byte_end":278812,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278813,"byte_end":278816,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278817,"byte_end":278894,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278895,"byte_end":278959,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":278960,"byte_end":279012,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279013,"byte_end":279016,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279017,"byte_end":279094,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279095,"byte_end":279167,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279168,"byte_end":279237,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279238,"byte_end":279316,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279317,"byte_end":279320,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279321,"byte_end":279334,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279335,"byte_end":279338,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279339,"byte_end":279346,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279347,"byte_end":279380,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279381,"byte_end":279404,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279405,"byte_end":279446,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279447,"byte_end":279493,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279494,"byte_end":279497,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279498,"byte_end":279557,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279558,"byte_end":279580,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279581,"byte_end":279615,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279616,"byte_end":279625,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279626,"byte_end":279629,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279630,"byte_end":279653,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279654,"byte_end":279693,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279694,"byte_end":279730,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279731,"byte_end":279774,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279775,"byte_end":279791,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279792,"byte_end":279812,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279813,"byte_end":279822,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279823,"byte_end":279830,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279831,"byte_end":279834,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279835,"byte_end":279900,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279901,"byte_end":279943,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279944,"byte_end":279953,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":279954,"byte_end":279961,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7864},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280313,"byte_end":280322,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280253,"byte_end":280301,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280238,"byte_end":280252,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7896},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280313,"byte_end":280322,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7901},{"krate":0,"index":7902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7929},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282273,"byte_end":282285,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7936},{"krate":0,"index":7933},{"krate":0,"index":7937},{"krate":0,"index":7934},{"krate":0,"index":7935}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282213,"byte_end":282261,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282198,"byte_end":282212,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7967},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282273,"byte_end":282285,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7972},{"krate":0,"index":7973},{"krate":0,"index":7974}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227617,"byte_end":227629,"line_start":131,"line_end":131,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1973}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227555,"byte_end":227606,"line_start":130,"line_end":130,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228171,"byte_end":228179,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn <E> (self) -> ErrInto<Self, E>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227647,"byte_end":227721,"line_start":132,"line_end":132,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227726,"byte_end":227752,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227757,"byte_end":227760,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227765,"byte_end":227779,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227784,"byte_end":227787,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227792,"byte_end":227799,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227804,"byte_end":227845,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227850,"byte_end":227896,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227901,"byte_end":227904,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227909,"byte_end":227929,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227934,"byte_end":227979,"line_start":142,"line_end":142,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227984,"byte_end":228015,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228020,"byte_end":228023,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228028,"byte_end":228082,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228087,"byte_end":228138,"line_start":146,"line_end":146,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228143,"byte_end":228151,"line_start":147,"line_end":147,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228156,"byte_end":228163,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228834,"byte_end":228840,"line_start":174,"line_end":174,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn <T, F> (self, f: F) -> MapOk<Self, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228314,"byte_end":228387,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228392,"byte_end":228423,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228428,"byte_end":228431,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228436,"byte_end":228450,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228455,"byte_end":228458,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228463,"byte_end":228470,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228475,"byte_end":228516,"line_start":163,"line_end":163,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228521,"byte_end":228567,"line_start":164,"line_end":164,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228572,"byte_end":228575,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228580,"byte_end":228600,"line_start":166,"line_end":166,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228605,"byte_end":228646,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228651,"byte_end":228682,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228687,"byte_end":228690,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228695,"byte_end":228748,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228753,"byte_end":228801,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228806,"byte_end":228814,"line_start":172,"line_end":172,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228819,"byte_end":228826,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229505,"byte_end":229512,"line_start":199,"line_end":199,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn <E, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":228986,"byte_end":229057,"line_start":182,"line_end":182,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229062,"byte_end":229093,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229098,"byte_end":229101,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229106,"byte_end":229120,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229125,"byte_end":229128,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229133,"byte_end":229140,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229145,"byte_end":229186,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229191,"byte_end":229237,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229242,"byte_end":229245,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229250,"byte_end":229270,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229275,"byte_end":229316,"line_start":192,"line_end":192,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229321,"byte_end":229353,"line_start":193,"line_end":193,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229358,"byte_end":229361,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229366,"byte_end":229419,"line_start":195,"line_end":195,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229424,"byte_end":229472,"line_start":196,"line_end":196,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229477,"byte_end":229485,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229490,"byte_end":229497,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231076,"byte_end":231084,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn <Fut, F> (self, f: F) -> AndThen<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229663,"byte_end":229739,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229744,"byte_end":229784,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229789,"byte_end":229792,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229797,"byte_end":229873,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229878,"byte_end":229954,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":229959,"byte_end":230032,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230037,"byte_end":230079,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230084,"byte_end":230087,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230092,"byte_end":230165,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230170,"byte_end":230201,"line_start":216,"line_end":216,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230206,"byte_end":230209,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230214,"byte_end":230288,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230293,"byte_end":230367,"line_start":219,"line_end":219,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230372,"byte_end":230388,"line_start":220,"line_end":220,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230393,"byte_end":230396,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230401,"byte_end":230472,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230477,"byte_end":230503,"line_start":223,"line_end":223,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230508,"byte_end":230511,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230516,"byte_end":230588,"line_start":225,"line_end":225,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230593,"byte_end":230642,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230647,"byte_end":230650,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230655,"byte_end":230669,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230674,"byte_end":230677,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230682,"byte_end":230689,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230694,"byte_end":230725,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230730,"byte_end":230754,"line_start":232,"line_end":232,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230759,"byte_end":230797,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230802,"byte_end":230805,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230810,"byte_end":230866,"line_start":235,"line_end":235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230871,"byte_end":230874,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230879,"byte_end":230914,"line_start":237,"line_end":237,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230919,"byte_end":230958,"line_start":238,"line_end":238,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230963,"byte_end":230987,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":230992,"byte_end":231008,"line_start":240,"line_end":240,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231013,"byte_end":231029,"line_start":241,"line_end":241,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231034,"byte_end":231044,"line_start":242,"line_end":242,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231049,"byte_end":231056,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231061,"byte_end":231068,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232187,"byte_end":232194,"line_start":271,"line_end":271,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn <Fut, F> (self, f: F) -> OrElse<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231288,"byte_end":231353,"line_start":254,"line_end":254,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231358,"byte_end":231407,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231412,"byte_end":231415,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231420,"byte_end":231499,"line_start":257,"line_end":257,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231504,"byte_end":231578,"line_start":258,"line_end":258,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231583,"byte_end":231659,"line_start":259,"line_end":259,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231664,"byte_end":231709,"line_start":260,"line_end":260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231714,"byte_end":231717,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231722,"byte_end":231797,"line_start":262,"line_end":262,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231802,"byte_end":231842,"line_start":263,"line_end":263,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231847,"byte_end":231850,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231855,"byte_end":231964,"line_start":265,"line_end":265,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":231969,"byte_end":232043,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232048,"byte_end":232064,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232069,"byte_end":232072,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232077,"byte_end":232148,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232153,"byte_end":232179,"line_start":270,"line_end":270,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232696,"byte_end":232706,"line_start":286,"line_end":286,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn <F> (self, f: F) -> InspectOk<Self, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232393,"byte_end":232467,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232472,"byte_end":232482,"line_start":281,"line_end":281,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232487,"byte_end":232490,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232495,"byte_end":232565,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232570,"byte_end":232646,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232651,"byte_end":232688,"line_start":285,"line_end":285,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233144,"byte_end":233155,"line_start":299,"line_end":299,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn <F> (self, f: F) -> InspectErr<Self, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232853,"byte_end":232932,"line_start":294,"line_end":294,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232937,"byte_end":232940,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":232945,"byte_end":233015,"line_start":296,"line_end":296,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233020,"byte_end":233094,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233099,"byte_end":233136,"line_start":298,"line_end":298,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234025,"byte_end":234036,"line_start":328,"line_end":328,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn (self) -> IntoStream<Self>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233307,"byte_end":233360,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233365,"byte_end":233409,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233414,"byte_end":233417,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233422,"byte_end":233471,"line_start":310,"line_end":310,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233476,"byte_end":233549,"line_start":311,"line_end":311,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233554,"byte_end":233574,"line_start":312,"line_end":312,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233579,"byte_end":233582,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233587,"byte_end":233601,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233606,"byte_end":233609,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233614,"byte_end":233621,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233626,"byte_end":233685,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233690,"byte_end":233693,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233698,"byte_end":233717,"line_start":319,"line_end":319,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233722,"byte_end":233740,"line_start":320,"line_end":320,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233745,"byte_end":233817,"line_start":321,"line_end":321,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233822,"byte_end":233852,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233857,"byte_end":233864,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233869,"byte_end":233943,"line_start":324,"line_end":324,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233948,"byte_end":233951,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":233956,"byte_end":234005,"line_start":326,"line_end":326,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234010,"byte_end":234017,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234880,"byte_end":234888,"line_start":355,"line_end":355,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn (&mut self) -> TryNext<'_, Self>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234141,"byte_end":234215,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234220,"byte_end":234294,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234299,"byte_end":234311,"line_start":337,"line_end":337,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234316,"byte_end":234319,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234324,"byte_end":234391,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234396,"byte_end":234468,"line_start":340,"line_end":340,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234473,"byte_end":234512,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234517,"byte_end":234520,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234525,"byte_end":234539,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234544,"byte_end":234547,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234552,"byte_end":234559,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234564,"byte_end":234605,"line_start":346,"line_end":346,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234610,"byte_end":234656,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234661,"byte_end":234664,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234669,"byte_end":234726,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234731,"byte_end":234734,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234739,"byte_end":234793,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234798,"byte_end":234847,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234852,"byte_end":234860,"line_start":353,"line_end":353,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234865,"byte_end":234872,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236181,"byte_end":236193,"line_start":395,"line_end":395,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn <Fut, F> (self, f: F) -> TryForEach<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":234996,"byte_end":235065,"line_start":362,"line_end":362,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235070,"byte_end":235126,"line_start":363,"line_end":363,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235131,"byte_end":235134,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235139,"byte_end":235214,"line_start":365,"line_end":365,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235219,"byte_end":235289,"line_start":366,"line_end":366,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235294,"byte_end":235332,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235337,"byte_end":235340,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235345,"byte_end":235423,"line_start":369,"line_end":369,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235428,"byte_end":235488,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235493,"byte_end":235550,"line_start":371,"line_end":371,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235555,"byte_end":235622,"line_start":372,"line_end":372,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235627,"byte_end":235657,"line_start":373,"line_end":373,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235662,"byte_end":235665,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235670,"byte_end":235684,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235689,"byte_end":235692,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235697,"byte_end":235704,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235709,"byte_end":235750,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235755,"byte_end":235779,"line_start":379,"line_end":379,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235784,"byte_end":235830,"line_start":380,"line_end":380,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235835,"byte_end":235838,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235843,"byte_end":235864,"line_start":382,"line_end":382,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235869,"byte_end":235872,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235877,"byte_end":235882,"line_start":384,"line_end":384,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235887,"byte_end":235948,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235953,"byte_end":235975,"line_start":386,"line_end":386,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":235980,"byte_end":236044,"line_start":387,"line_end":387,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236049,"byte_end":236060,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236065,"byte_end":236104,"line_start":389,"line_end":389,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236109,"byte_end":236114,"line_start":390,"line_end":390,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236119,"byte_end":236122,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236127,"byte_end":236148,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236153,"byte_end":236161,"line_start":393,"line_end":393,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236166,"byte_end":236173,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237161,"byte_end":237175,"line_start":425,"line_end":425,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn <Fut, F> (self, f: F) -> TrySkipWhile<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236412,"byte_end":236486,"line_start":404,"line_end":404,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236491,"byte_end":236514,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236519,"byte_end":236522,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236527,"byte_end":236558,"line_start":407,"line_end":407,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236563,"byte_end":236640,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236645,"byte_end":236674,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236679,"byte_end":236682,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236687,"byte_end":236701,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236706,"byte_end":236709,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236714,"byte_end":236721,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236726,"byte_end":236767,"line_start":414,"line_end":414,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236772,"byte_end":236796,"line_start":415,"line_end":415,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236801,"byte_end":236847,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236852,"byte_end":236855,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236860,"byte_end":236929,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":236934,"byte_end":237004,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237009,"byte_end":237012,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237017,"byte_end":237084,"line_start":421,"line_end":421,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237089,"byte_end":237128,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237133,"byte_end":237141,"line_start":423,"line_end":423,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":237146,"byte_end":237153,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240463,"byte_end":240474,"line_start":520,"line_end":520,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn <C> (self) -> TryCollect<Self, C>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239424,"byte_end":239476,"line_start":490,"line_end":490,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239481,"byte_end":239548,"line_start":491,"line_end":491,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239553,"byte_end":239556,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239561,"byte_end":239635,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239640,"byte_end":239721,"line_start":494,"line_end":494,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239726,"byte_end":239796,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239801,"byte_end":239804,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239809,"byte_end":239877,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239882,"byte_end":239885,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239890,"byte_end":239904,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239909,"byte_end":239912,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239917,"byte_end":239924,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239929,"byte_end":239970,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":239975,"byte_end":240006,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240011,"byte_end":240049,"line_start":504,"line_end":504,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240054,"byte_end":240074,"line_start":505,"line_end":505,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240079,"byte_end":240082,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240087,"byte_end":240124,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240129,"byte_end":240132,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240137,"byte_end":240164,"line_start":509,"line_end":509,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240169,"byte_end":240193,"line_start":510,"line_end":510,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240198,"byte_end":240244,"line_start":511,"line_end":511,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240249,"byte_end":240258,"line_start":512,"line_end":512,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240263,"byte_end":240306,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240311,"byte_end":240318,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240323,"byte_end":240326,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240331,"byte_end":240394,"line_start":516,"line_end":516,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240399,"byte_end":240430,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240435,"byte_end":240443,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240448,"byte_end":240455,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241901,"byte_end":241911,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn <Fut, F> (self, f: F) -> TryFilter<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240613,"byte_end":240686,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240691,"byte_end":240725,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240730,"byte_end":240733,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240738,"byte_end":240813,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240818,"byte_end":240893,"line_start":531,"line_end":531,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240898,"byte_end":240971,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":240976,"byte_end":241047,"line_start":533,"line_end":533,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241052,"byte_end":241102,"line_start":534,"line_end":534,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241107,"byte_end":241110,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241115,"byte_end":241186,"line_start":536,"line_end":536,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241191,"byte_end":241194,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241199,"byte_end":241275,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241280,"byte_end":241350,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241355,"byte_end":241380,"line_start":540,"line_end":540,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241385,"byte_end":241388,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241393,"byte_end":241407,"line_start":542,"line_end":542,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241412,"byte_end":241419,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241424,"byte_end":241465,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241470,"byte_end":241494,"line_start":545,"line_end":545,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241499,"byte_end":241556,"line_start":546,"line_end":546,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241561,"byte_end":241564,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241569,"byte_end":241649,"line_start":548,"line_end":548,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241654,"byte_end":241697,"line_start":549,"line_end":549,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241702,"byte_end":241735,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241740,"byte_end":241747,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241752,"byte_end":241755,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241760,"byte_end":241808,"line_start":553,"line_end":553,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241813,"byte_end":241868,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241873,"byte_end":241881,"line_start":555,"line_end":555,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":241886,"byte_end":241893,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243487,"byte_end":243501,"line_start":598,"line_end":598,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn <Fut, F, T> (self, f: F) -> TryFilterMap<Self, Fut, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242111,"byte_end":242173,"line_start":566,"line_end":566,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242178,"byte_end":242246,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242251,"byte_end":242285,"line_start":568,"line_end":568,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242290,"byte_end":242293,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242298,"byte_end":242373,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242378,"byte_end":242453,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242458,"byte_end":242534,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242539,"byte_end":242604,"line_start":573,"line_end":573,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242609,"byte_end":242612,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242617,"byte_end":242688,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242693,"byte_end":242696,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242701,"byte_end":242777,"line_start":577,"line_end":577,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242782,"byte_end":242856,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242861,"byte_end":242886,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242891,"byte_end":242894,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242899,"byte_end":242913,"line_start":581,"line_end":581,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242918,"byte_end":242925,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242930,"byte_end":242971,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":242976,"byte_end":243033,"line_start":584,"line_end":584,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243038,"byte_end":243063,"line_start":585,"line_end":585,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243068,"byte_end":243071,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243076,"byte_end":243146,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243151,"byte_end":243206,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243211,"byte_end":243273,"line_start":589,"line_end":589,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243278,"byte_end":243293,"line_start":590,"line_end":590,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243298,"byte_end":243305,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243310,"byte_end":243313,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243318,"byte_end":243339,"line_start":593,"line_end":593,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243344,"byte_end":243393,"line_start":594,"line_end":594,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243398,"byte_end":243454,"line_start":595,"line_end":595,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243459,"byte_end":243467,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243472,"byte_end":243479,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245149,"byte_end":245160,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn (self) -> TryFlatten<Self>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243734,"byte_end":243799,"line_start":607,"line_end":607,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243804,"byte_end":243807,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243812,"byte_end":243885,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243890,"byte_end":243963,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":243968,"byte_end":244041,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244046,"byte_end":244116,"line_start":612,"line_end":612,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244121,"byte_end":244124,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244129,"byte_end":244143,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244148,"byte_end":244151,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244156,"byte_end":244163,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244168,"byte_end":244209,"line_start":617,"line_end":617,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244214,"byte_end":244245,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244250,"byte_end":244301,"line_start":619,"line_end":619,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244306,"byte_end":244326,"line_start":620,"line_end":620,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244331,"byte_end":244334,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244339,"byte_end":244378,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244383,"byte_end":244422,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244427,"byte_end":244466,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244471,"byte_end":244474,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244479,"byte_end":244506,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244511,"byte_end":244554,"line_start":627,"line_end":627,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244559,"byte_end":244566,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244571,"byte_end":244598,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244603,"byte_end":244646,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244651,"byte_end":244695,"line_start":631,"line_end":631,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244700,"byte_end":244707,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244712,"byte_end":244739,"line_start":633,"line_end":633,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244744,"byte_end":244789,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244794,"byte_end":244839,"line_start":635,"line_end":635,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244844,"byte_end":244888,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244893,"byte_end":244900,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244905,"byte_end":244908,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244913,"byte_end":244952,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":244957,"byte_end":245006,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245011,"byte_end":245060,"line_start":641,"line_end":641,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245065,"byte_end":245115,"line_start":642,"line_end":642,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245120,"byte_end":245129,"line_start":643,"line_end":643,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245134,"byte_end":245141,"line_start":644,"line_end":644,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246640,"byte_end":246648,"line_start":682,"line_end":682,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn <T, Fut, F> (self, init: T, f: F) -> TryFold<Self, Fut, T, F>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245353,"byte_end":245423,"line_start":654,"line_end":654,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245428,"byte_end":245488,"line_start":655,"line_end":655,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245493,"byte_end":245496,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245501,"byte_end":245571,"line_start":657,"line_end":657,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245576,"byte_end":245652,"line_start":658,"line_end":658,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245657,"byte_end":245733,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245738,"byte_end":245808,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245813,"byte_end":245839,"line_start":661,"line_end":661,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245844,"byte_end":245847,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245852,"byte_end":245932,"line_start":663,"line_end":663,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":245937,"byte_end":246006,"line_start":664,"line_end":664,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246011,"byte_end":246032,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246037,"byte_end":246040,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246045,"byte_end":246059,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246064,"byte_end":246067,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246072,"byte_end":246079,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246084,"byte_end":246125,"line_start":670,"line_end":670,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246130,"byte_end":246176,"line_start":671,"line_end":671,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246181,"byte_end":246184,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246189,"byte_end":246258,"line_start":673,"line_end":673,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246263,"byte_end":246340,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246345,"byte_end":246378,"line_start":675,"line_end":675,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246383,"byte_end":246386,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246391,"byte_end":246477,"line_start":677,"line_end":677,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246482,"byte_end":246568,"line_start":678,"line_end":678,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246573,"byte_end":246607,"line_start":679,"line_end":679,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246612,"byte_end":246620,"line_start":680,"line_end":680,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246625,"byte_end":246632,"line_start":681,"line_end":681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":248130,"byte_end":248140,"line_start":725,"line_end":725,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn (self) -> TryConcat<Self>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246884,"byte_end":246946,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":246951,"byte_end":247026,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247031,"byte_end":247034,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247039,"byte_end":247110,"line_start":694,"line_end":694,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247115,"byte_end":247191,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247196,"byte_end":247235,"line_start":696,"line_end":696,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247240,"byte_end":247243,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247248,"byte_end":247334,"line_start":698,"line_end":698,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247339,"byte_end":247342,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247347,"byte_end":247431,"line_start":700,"line_end":700,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247436,"byte_end":247492,"line_start":701,"line_end":701,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247497,"byte_end":247500,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247505,"byte_end":247519,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247524,"byte_end":247527,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247532,"byte_end":247539,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247544,"byte_end":247585,"line_start":706,"line_end":706,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247590,"byte_end":247621,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247626,"byte_end":247664,"line_start":708,"line_end":708,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247669,"byte_end":247689,"line_start":709,"line_end":709,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247694,"byte_end":247697,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247702,"byte_end":247763,"line_start":711,"line_end":711,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247768,"byte_end":247771,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247776,"byte_end":247803,"line_start":713,"line_end":713,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247808,"byte_end":247839,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247844,"byte_end":247870,"line_start":715,"line_end":715,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247875,"byte_end":247945,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247950,"byte_end":247959,"line_start":717,"line_end":717,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247964,"byte_end":247971,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247976,"byte_end":247979,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":247984,"byte_end":248023,"line_start":720,"line_end":720,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":248028,"byte_end":248031,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":248036,"byte_end":248096,"line_start":722,"line_end":722,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":248101,"byte_end":248110,"line_start":723,"line_end":723,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":248115,"byte_end":248122,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":251239,"byte_end":251258,"line_start":804,"line_end":804,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn (&mut self, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":251131,"byte_end":251209,"line_start":802,"line_end":802,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":251214,"byte_end":251231,"line_start":803,"line_end":803,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8005},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285720,"byte_end":285724,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8007}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285605,"byte_end":285642,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285660,"byte_end":285708,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286242,"byte_end":286246,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn <I> (i: I) -> Iter<I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285776,"byte_end":285840,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285841,"byte_end":285869,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285870,"byte_end":285873,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285874,"byte_end":285947,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285948,"byte_end":286003,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286004,"byte_end":286007,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286008,"byte_end":286015,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286016,"byte_end":286057,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286058,"byte_end":286101,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286102,"byte_end":286105,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286106,"byte_end":286150,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286151,"byte_end":286216,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286217,"byte_end":286226,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286227,"byte_end":286234,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8011},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286888,"byte_end":286894,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8013}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286771,"byte_end":286810,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286828,"byte_end":286876,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287418,"byte_end":287424,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn <T> (item: T) -> Repeat<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286916,"byte_end":286976,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286977,"byte_end":286980,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":286981,"byte_end":287048,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287049,"byte_end":287121,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287122,"byte_end":287179,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287180,"byte_end":287183,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287184,"byte_end":287191,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287192,"byte_end":287233,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287234,"byte_end":287277,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287278,"byte_end":287281,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287282,"byte_end":287317,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287318,"byte_end":287392,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287393,"byte_end":287402,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287403,"byte_end":287410,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8017},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288209,"byte_end":288214,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8019}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288093,"byte_end":288131,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288149,"byte_end":288197,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288382,"byte_end":288387,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn <T> () -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288252,"byte_end":288300,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288301,"byte_end":288304,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288305,"byte_end":288374,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289332,"byte_end":289336,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn <Fut> (future: Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289025,"byte_end":289066,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289067,"byte_end":289070,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289071,"byte_end":289078,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289079,"byte_end":289120,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289121,"byte_end":289164,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289165,"byte_end":289168,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289169,"byte_end":289213,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289214,"byte_end":289269,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289270,"byte_end":289306,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289307,"byte_end":289316,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289317,"byte_end":289324,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8023},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289607,"byte_end":289611,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8025}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289547,"byte_end":289595,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289515,"byte_end":289529,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8041},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289607,"byte_end":289611,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":8044},{"krate":0,"index":8045}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8065},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290782,"byte_end":290789,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8067}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290662,"byte_end":290704,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290722,"byte_end":290770,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2096},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290965,"byte_end":290972,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn <T> () -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290833,"byte_end":290887,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290888,"byte_end":290891,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":290892,"byte_end":290957,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291678,"byte_end":291684,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2120}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291577,"byte_end":291617,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291618,"byte_end":291666,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292372,"byte_end":292379,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn <T, F> (f: F) -> PollFn<F>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291884,"byte_end":291957,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291958,"byte_end":291961,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291962,"byte_end":292021,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292022,"byte_end":292025,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292026,"byte_end":292040,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292041,"byte_end":292044,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292045,"byte_end":292052,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292053,"byte_end":292086,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292087,"byte_end":292115,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292116,"byte_end":292119,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292120,"byte_end":292149,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292150,"byte_end":292153,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292154,"byte_end":292218,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292219,"byte_end":292272,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292273,"byte_end":292294,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292295,"byte_end":292348,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292349,"byte_end":292356,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292357,"byte_end":292364,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8071},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293040,"byte_end":293046,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8075},{"krate":0,"index":8076},{"krate":0,"index":8074}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":292980,"byte_end":293028,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":292948,"byte_end":292962,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8099},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293040,"byte_end":293046,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":8103},{"krate":0,"index":8104},{"krate":0,"index":8105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293624,"byte_end":293630,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn <St1, St2> (stream1: St1, stream2: St2) -> Select<St1, St2>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293148,"byte_end":293216,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293217,"byte_end":293293,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293294,"byte_end":293342,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293343,"byte_end":293346,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293347,"byte_end":293421,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293422,"byte_end":293491,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293492,"byte_end":293519,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293520,"byte_end":293523,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293524,"byte_end":293595,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293596,"byte_end":293616,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294009,"byte_end":294016,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn (&self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293901,"byte_end":293975,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293980,"byte_end":293997,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294372,"byte_end":294379,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn (&mut self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294110,"byte_end":294178,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294183,"byte_end":294214,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294219,"byte_end":294222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294227,"byte_end":294300,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294305,"byte_end":294360,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":8130},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294769,"byte_end":294780,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn (self: Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295222,"byte_end":295232,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn (self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":294986,"byte_end":295049,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295054,"byte_end":295057,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295062,"byte_end":295134,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295139,"byte_end":295210,"line_start":71,"line_end":71,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298445,"byte_end":298451,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn <T, F, Fut, Item> (init: T, f: F) -> Unfold<T, F, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297003,"byte_end":297073,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297074,"byte_end":297077,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297078,"byte_end":297147,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297148,"byte_end":297229,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297230,"byte_end":297261,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297262,"byte_end":297265,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297266,"byte_end":297345,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297346,"byte_end":297425,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297426,"byte_end":297480,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297481,"byte_end":297484,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297485,"byte_end":297565,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297566,"byte_end":297636,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297637,"byte_end":297659,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297660,"byte_end":297663,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297664,"byte_end":297741,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297742,"byte_end":297814,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297815,"byte_end":297892,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297893,"byte_end":297953,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297954,"byte_end":297957,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297958,"byte_end":297971,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297972,"byte_end":297975,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297976,"byte_end":297983,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":297984,"byte_end":298025,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298026,"byte_end":298069,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298070,"byte_end":298073,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298074,"byte_end":298129,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298130,"byte_end":298153,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298154,"byte_end":298193,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298194,"byte_end":298231,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298232,"byte_end":298271,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298272,"byte_end":298288,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298289,"byte_end":298305,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298306,"byte_end":298315,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298316,"byte_end":298323,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298324,"byte_end":298327,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298328,"byte_end":298380,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298381,"byte_end":298419,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298420,"byte_end":298429,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298430,"byte_end":298437,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8132},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298782,"byte_end":298788,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":8136},{"krate":0,"index":8137},{"krate":0,"index":8138}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298722,"byte_end":298770,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298707,"byte_end":298721,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8164},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298782,"byte_end":298788,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":8169},{"krate":0,"index":8170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":8197},{"krate":0,"index":2216},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2235},{"krate":0,"index":2242}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/mod.rs","byte_start":300230,"byte_end":300251,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301441,"byte_end":301449,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301398,"byte_end":301430,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":304096,"byte_end":304109,"line_start":95,"line_end":95,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":304048,"byte_end":304085,"line_start":94,"line_end":94,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","parent":null,"children":[{"krate":0,"index":2244}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306513,"byte_end":306548,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306549,"byte_end":306605,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":307242,"byte_end":307247,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306607,"byte_end":306642,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306643,"byte_end":306646,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306647,"byte_end":306722,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306723,"byte_end":306760,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306761,"byte_end":306764,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306765,"byte_end":306829,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306830,"byte_end":306833,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306834,"byte_end":306905,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306906,"byte_end":306957,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":306958,"byte_end":307050,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":307051,"byte_end":307054,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":307055,"byte_end":307126,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/never.rs","byte_start":307127,"byte_end":307232,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307350,"byte_end":307357,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307372,"byte_end":307378,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307387,"byte_end":307396,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn (self, arg: A) -> Self::Output","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2260},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307588,"byte_end":307594,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2262}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307619,"byte_end":307627,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn (&mut self, arg: A) -> Self::Output","parent":{"krate":0,"index":2260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":308931,"byte_end":308935,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8216},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309291,"byte_end":309298,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8237},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310032,"byte_end":310045,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8253},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310387,"byte_end":310396,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8268},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311102,"byte_end":311109,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8283},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311820,"byte_end":311828,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8298},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312548,"byte_end":312559,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8310},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313377,"byte_end":313389,"line_start":272,"line_end":272,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8322},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314470,"byte_end":314484,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":315243,"byte_end":315249,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":2524}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":2525}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":2631}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66212,"byte_end":66222,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66387,"byte_end":66397,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66503,"byte_end":66513,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67151,"byte_end":67161,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67291,"byte_end":67301,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67554,"byte_end":67564,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":68621,"byte_end":68631,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":68884,"byte_end":68894,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":3302}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72432,"byte_end":72445,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72578,"byte_end":72591,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72847,"byte_end":72860,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":49181,"byte_end":49184,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74255,"byte_end":74259,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74832,"byte_end":74836,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74968,"byte_end":74972,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75549,"byte_end":75556,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76107,"byte_end":76114,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76259,"byte_end":76266,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76293,"byte_end":76300,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77586,"byte_end":77595,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4362},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":79032,"byte_end":79041,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":79257,"byte_end":79266,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":4363}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80670,"byte_end":80682,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4424},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":82146,"byte_end":82158,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":82386,"byte_end":82398,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":4425}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83944,"byte_end":83956,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":84289,"byte_end":84301,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":84484,"byte_end":84496,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84906,"byte_end":84912,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85582,"byte_end":85588,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85730,"byte_end":85736,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86213,"byte_end":86218,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86397,"byte_end":86402,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86434,"byte_end":86439,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86536,"byte_end":86541,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93273,"byte_end":93279,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94639,"byte_end":94645,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":95348,"byte_end":95354,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102920,"byte_end":102929,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104635,"byte_end":104644,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106124,"byte_end":106130,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106515,"byte_end":106521,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106902,"byte_end":106908,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107149,"byte_end":107155,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":5314}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107525,"byte_end":107531,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107807,"byte_end":107813,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":5315}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":108196,"byte_end":108202,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163363,"byte_end":163368,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163637,"byte_end":163642,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163847,"byte_end":163852,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":5372},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165450,"byte_end":165457,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165768,"byte_end":165775,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165951,"byte_end":165958,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":5428}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166911,"byte_end":166917,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":167192,"byte_end":167198,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":5473}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":168007,"byte_end":168013,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168693,"byte_end":168702,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":5518},{"krate":0,"index":5519},{"krate":0,"index":5520},{"krate":0,"index":5521}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168935,"byte_end":168944,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":169062,"byte_end":169071,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":5522},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170508,"byte_end":170514,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170906,"byte_end":170912,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":830},{"krate":0,"index":5591},{"krate":0,"index":5592},{"krate":0,"index":5593},{"krate":0,"index":5594}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":171306,"byte_end":171312,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":171580,"byte_end":171586,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":5595},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173787,"byte_end":173796,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174093,"byte_end":174102,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5663},{"krate":0,"index":5664}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174403,"byte_end":174412,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174689,"byte_end":174698,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":5665},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176827,"byte_end":176834,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":177003,"byte_end":177010,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":177202,"byte_end":177209,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":5726}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178700,"byte_end":178704,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179060,"byte_end":179064,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179397,"byte_end":179401,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179648,"byte_end":179652,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181221,"byte_end":181228,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181521,"byte_end":181528,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181822,"byte_end":181829,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":182080,"byte_end":182087,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":975},{"krate":0,"index":5931}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183183,"byte_end":183187,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":5976},{"krate":0,"index":5977},{"krate":0,"index":5978},{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183688,"byte_end":183692,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183790,"byte_end":183794,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":5980},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185030,"byte_end":185042,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187556,"byte_end":187568,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187688,"byte_end":187700,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188559,"byte_end":188562,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188777,"byte_end":188780,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":6114},{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188954,"byte_end":188957,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":189131,"byte_end":189134,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":6118},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190305,"byte_end":190309,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190360,"byte_end":190364,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190515,"byte_end":190519,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190658,"byte_end":190662,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191311,"byte_end":191325,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191486,"byte_end":191500,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191644,"byte_end":191658,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192844,"byte_end":192852,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":6272},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":1125},{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":194078,"byte_end":194086,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":194228,"byte_end":194236,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":6277},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195441,"byte_end":195445,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195716,"byte_end":195720,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195831,"byte_end":195835,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196692,"byte_end":196696,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":6370},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6373}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196924,"byte_end":196928,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":197046,"byte_end":197050,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":6374},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198723,"byte_end":198732,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199184,"byte_end":199193,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":6446},{"krate":0,"index":6447},{"krate":0,"index":6448},{"krate":0,"index":6449}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199622,"byte_end":199631,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199891,"byte_end":199900,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":6450},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202241,"byte_end":202245,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202455,"byte_end":202459,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":6499},{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":203498,"byte_end":203502,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204460,"byte_end":204469,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204917,"byte_end":204926,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":205348,"byte_end":205357,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":6575},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":206966,"byte_end":206975,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":208298,"byte_end":208307,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1278}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":208634,"byte_end":208643,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1282},{"krate":0,"index":6634},{"krate":0,"index":6635},{"krate":0,"index":6636},{"krate":0,"index":6637},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210836,"byte_end":210845,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1289},{"krate":0,"index":6638},{"krate":0,"index":1290}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":211915,"byte_end":211924,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212809,"byte_end":212813,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213103,"byte_end":213107,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6706},{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213416,"byte_end":213420,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213658,"byte_end":213662,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":6708},{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215573,"byte_end":215576,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217327,"byte_end":217330,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217521,"byte_end":217524,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":6771},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220208,"byte_end":220212,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220698,"byte_end":220702,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220866,"byte_end":220870,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":6847},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6850}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":221337,"byte_end":221341,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":6851},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":222604,"byte_end":222608,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122558,"byte_end":122559,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254190,"byte_end":254197,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254490,"byte_end":254497,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919},{"krate":0,"index":6920}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254790,"byte_end":254797,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":6921},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":256011,"byte_end":256018,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256913,"byte_end":256923,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1581},{"krate":0,"index":7191},{"krate":0,"index":7192},{"krate":0,"index":7193},{"krate":0,"index":7194}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":257122,"byte_end":257132,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":257253,"byte_end":257263,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258328,"byte_end":258334,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258626,"byte_end":258632,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":7412},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258922,"byte_end":258928,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":7416},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":260276,"byte_end":260282,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261198,"byte_end":261205,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261259,"byte_end":261266,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261432,"byte_end":261439,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261581,"byte_end":261588,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262330,"byte_end":262340,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262636,"byte_end":262646,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262960,"byte_end":262970,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1680},{"krate":0,"index":7490}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264347,"byte_end":264356,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264752,"byte_end":264761,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7562}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":265065,"byte_end":265074,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":265343,"byte_end":265352,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":7563},{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267525,"byte_end":267537,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267837,"byte_end":267849,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7631},{"krate":0,"index":7632}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":268054,"byte_end":268066,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":268356,"byte_end":268368,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":7633},{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270538,"byte_end":270548,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":7679},{"krate":0,"index":7680},{"krate":0,"index":7681},{"krate":0,"index":7682}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270813,"byte_end":270823,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":271069,"byte_end":271079,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1777},{"krate":0,"index":7683}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272675,"byte_end":272685,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272877,"byte_end":272887,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":273075,"byte_end":273085,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":7739}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274096,"byte_end":274105,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274371,"byte_end":274380,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":7784}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275618,"byte_end":275625,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275984,"byte_end":275991,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":276349,"byte_end":276356,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":276622,"byte_end":276629,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":7863}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280435,"byte_end":280444,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280745,"byte_end":280754,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282492,"byte_end":282504,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282960,"byte_end":282972,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":8000},{"krate":0,"index":8001},{"krate":0,"index":8002},{"krate":0,"index":8003}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":283421,"byte_end":283433,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":8004},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":284986,"byte_end":284998,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227549,"byte_end":227550,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285764,"byte_end":285768,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286374,"byte_end":286378,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287512,"byte_end":287518,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287545,"byte_end":287551,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287858,"byte_end":287864,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288476,"byte_end":288481,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288513,"byte_end":288518,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2051}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288603,"byte_end":288608,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289667,"byte_end":289671,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289800,"byte_end":289804,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":8064},{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":290444,"byte_end":290448,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291058,"byte_end":291065,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291097,"byte_end":291104,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291189,"byte_end":291196,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291721,"byte_end":291727,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291758,"byte_end":291764,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292506,"byte_end":292512,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Inherent","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293878,"byte_end":293884,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":8130},{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295358,"byte_end":295364,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295582,"byte_end":295588,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":8131}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298901,"byte_end":298907,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":299210,"byte_end":299216,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2202}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":299442,"byte_end":299448,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2208},{"krate":0,"index":8196}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301313,"byte_end":301315,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301370,"byte_end":301372,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307460,"byte_end":307461,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2258},{"krate":0,"index":2259}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307695,"byte_end":307696,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307965,"byte_end":307966,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2275}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":308981,"byte_end":308985,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309079,"byte_end":309083,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2287},{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309342,"byte_end":309349,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309572,"byte_end":309579,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309770,"byte_end":309777,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310082,"byte_end":310095,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310431,"byte_end":310440,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310641,"byte_end":310650,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310829,"byte_end":310838,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311158,"byte_end":311165,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311384,"byte_end":311391,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2341}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311569,"byte_end":311576,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311877,"byte_end":311885,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312108,"byte_end":312116,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312298,"byte_end":312306,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312616,"byte_end":312627,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312864,"byte_end":312875,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313090,"byte_end":313101,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2390}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313446,"byte_end":313458,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313696,"byte_end":313708,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313924,"byte_end":313936,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2411}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314533,"byte_end":314547,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2425}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314768,"byte_end":314782,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314981,"byte_end":314995,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2437}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":315299,"byte_end":315305,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":315400,"byte_end":315406,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2451},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11721,"byte_end":11727,"line_start":304,"line_end":304,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11803,"byte_end":11809,"line_start":307,"line_end":307,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":687}},{"kind":"Mod","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":11995,"byte_end":11999,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2215}},{"kind":"Mod","span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/lib.rs","byte_start":12010,"byte_end":12015,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2243}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35079,"byte_end":35086,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35213,"byte_end":35220,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2453},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":35454,"byte_end":35461,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2453},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36266,"byte_end":36273,"line_start":61,"line_end":61,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2453},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/flatten.rs","byte_start":36507,"byte_end":36514,"line_start":73,"line_end":73,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2453},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39610,"byte_end":39614,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":39716,"byte_end":39720,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41444,"byte_end":41448,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2526},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/fuse.rs","byte_start":41557,"byte_end":41561,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2526},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42557,"byte_end":42577,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":106},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42709,"byte_end":42712,"line_start":33,"line_end":33,"column_start":14,"column_end":17},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":42887,"byte_end":42890,"line_start":40,"line_end":40,"column_start":33,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2570},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/map.rs","byte_start":43154,"byte_end":43157,"line_start":52,"line_end":52,"column_start":28,"column_end":31},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2570},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18656,"byte_end":18657,"line_start":115,"line_end":115,"column_start":31,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":131},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/future/mod.rs","byte_start":18788,"byte_end":18794,"line_start":119,"line_end":119,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":8293},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66212,"byte_end":66222,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66387,"byte_end":66397,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3186},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/into_future.rs","byte_start":66503,"byte_end":66513,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3186},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67151,"byte_end":67161,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67291,"byte_end":67301,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3230},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":67554,"byte_end":67564,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3230},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":68621,"byte_end":68631,"line_start":66,"line_end":66,"column_start":27,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3230},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten.rs","byte_start":68884,"byte_end":68894,"line_start":78,"line_end":78,"column_start":22,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3230},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72432,"byte_end":72445,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72578,"byte_end":72591,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3303},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/try_flatten_err.rs","byte_start":72847,"byte_end":72860,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3303},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":49181,"byte_end":49184,"line_start":133,"line_end":133,"column_start":48,"column_end":51},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":270},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_future/mod.rs","byte_start":49267,"byte_end":49276,"line_start":136,"line_end":136,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":271}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74255,"byte_end":74259,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4290},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74832,"byte_end":74836,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4290},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/lazy.rs","byte_start":74968,"byte_end":74972,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4290},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":75549,"byte_end":75556,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4296},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76107,"byte_end":76114,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4296},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76259,"byte_end":76266,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4296},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/pending.rs","byte_start":76293,"byte_end":76300,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4296},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":77586,"byte_end":77595,"line_start":45,"line_end":45,"column_start":19,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":79032,"byte_end":79041,"line_start":84,"line_end":84,"column_start":35,"column_end":44},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4302},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/maybe_done.rs","byte_start":79257,"byte_end":79266,"line_start":93,"line_end":93,"column_start":30,"column_end":39},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4302},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":80670,"byte_end":80682,"line_start":30,"line_end":30,"column_start":22,"column_end":34},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":82146,"byte_end":82158,"line_start":69,"line_end":69,"column_start":38,"column_end":50},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4364},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_maybe_done.rs","byte_start":82386,"byte_end":82398,"line_start":78,"line_end":78,"column_start":33,"column_end":45},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4364},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":83944,"byte_end":83956,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4426},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":84289,"byte_end":84301,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4426},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/option.rs","byte_start":84484,"byte_end":84496,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4426},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":84906,"byte_end":84912,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":448},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85582,"byte_end":85588,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":448},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/poll_fn.rs","byte_start":85730,"byte_end":85736,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":448},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86213,"byte_end":86218,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86397,"byte_end":86402,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4473},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86434,"byte_end":86439,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4473},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/ready.rs","byte_start":86536,"byte_end":86541,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4473},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":93273,"byte_end":93279,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4867},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":94639,"byte_end":94645,"line_start":53,"line_end":53,"column_start":23,"column_end":29},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4867},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/select.rs","byte_start":95348,"byte_end":95354,"line_start":75,"line_end":75,"column_start":28,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4867},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":102920,"byte_end":102929,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5237},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/try_select.rs","byte_start":104635,"byte_end":104644,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":5237},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106124,"byte_end":106130,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106515,"byte_end":106521,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":106902,"byte_end":106908,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107149,"byte_end":107155,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5245},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107525,"byte_end":107531,"line_start":71,"line_end":71,"column_start":28,"column_end":34},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5245},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":107807,"byte_end":107813,"line_start":84,"line_end":84,"column_start":23,"column_end":29},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5245},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/future/either.rs","byte_start":108196,"byte_end":108202,"line_start":101,"line_end":101,"column_start":28,"column_end":34},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5245},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163363,"byte_end":163368,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163637,"byte_end":163642,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5316},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/chain.rs","byte_start":163847,"byte_end":163852,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":5316},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165450,"byte_end":165457,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165768,"byte_end":165775,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5373},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/collect.rs","byte_start":165951,"byte_end":165958,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":5373},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":166911,"byte_end":166917,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":167192,"byte_end":167198,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5429},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/concat.rs","byte_start":168007,"byte_end":168013,"line_start":61,"line_end":61,"column_start":26,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":5429},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168693,"byte_end":168702,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":168935,"byte_end":168944,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5474},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/enumerate.rs","byte_start":169062,"byte_end":169071,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5474},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170508,"byte_end":170514,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5523},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":170906,"byte_end":170912,"line_start":40,"line_end":40,"column_start":18,"column_end":24},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":171306,"byte_end":171312,"line_start":57,"line_end":57,"column_start":34,"column_end":40},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5523},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter.rs","byte_start":171580,"byte_end":171586,"line_start":67,"line_end":67,"column_start":29,"column_end":35},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":5523},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":173787,"byte_end":173796,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5596},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174093,"byte_end":174102,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174403,"byte_end":174412,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5596},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/filter_map.rs","byte_start":174689,"byte_end":174698,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":5596},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":176827,"byte_end":176834,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":177003,"byte_end":177010,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5666},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/flatten.rs","byte_start":177202,"byte_end":177209,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5666},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":178700,"byte_end":178704,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5787},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179060,"byte_end":179064,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179397,"byte_end":179401,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5787},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fold.rs","byte_start":179648,"byte_end":179652,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":5787},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181221,"byte_end":181228,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5866},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181521,"byte_end":181528,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":181822,"byte_end":181829,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5866},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/for_each.rs","byte_start":182080,"byte_end":182087,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":5866},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183183,"byte_end":183187,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183688,"byte_end":183692,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5932},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/fuse.rs","byte_start":183790,"byte_end":183794,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5932},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":185030,"byte_end":185042,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187556,"byte_end":187568,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5981},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/into_future.rs","byte_start":187688,"byte_end":187700,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":5981},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188559,"byte_end":188562,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6063},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188777,"byte_end":188780,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":188954,"byte_end":188957,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6063},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/map.rs","byte_start":189131,"byte_end":189134,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6063},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190305,"byte_end":190309,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6212},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190360,"byte_end":190364,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190515,"byte_end":190519,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6212},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/next.rs","byte_start":190658,"byte_end":190662,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6212},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191311,"byte_end":191325,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191486,"byte_end":191500,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6220},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/select_next_some.rs","byte_start":191644,"byte_end":191658,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":6220},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":192844,"byte_end":192852,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":194078,"byte_end":194086,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6228},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":194228,"byte_end":194236,"line_start":71,"line_end":71,"column_start":28,"column_end":36},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6228},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195441,"byte_end":195445,"line_start":114,"line_end":114,"column_start":25,"column_end":29},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6278},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195716,"byte_end":195720,"line_start":126,"line_end":126,"column_start":34,"column_end":38},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6278},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/peek.rs","byte_start":195831,"byte_end":195835,"line_start":132,"line_end":132,"column_start":25,"column_end":29},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6278},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196692,"byte_end":196696,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6326},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":196924,"byte_end":196928,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6326},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip.rs","byte_start":197046,"byte_end":197050,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6326},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":198723,"byte_end":198732,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6375},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199184,"byte_end":199193,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199622,"byte_end":199631,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6375},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/skip_while.rs","byte_start":199891,"byte_end":199900,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6375},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202241,"byte_end":202245,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":202455,"byte_end":202459,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6451},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take.rs","byte_start":203498,"byte_end":203502,"line_start":73,"line_end":73,"column_start":26,"column_end":30},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":6451},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204460,"byte_end":204469,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6500},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":204917,"byte_end":204926,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":205348,"byte_end":205357,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6500},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_while.rs","byte_start":206966,"byte_end":206975,"line_start":111,"line_end":111,"column_start":34,"column_end":43},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6500},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":208298,"byte_end":208307,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6576},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":208634,"byte_end":208643,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":210836,"byte_end":210845,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6576},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/take_until.rs","byte_start":211915,"byte_end":211924,"line_start":158,"line_end":158,"column_start":31,"column_end":40},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6576},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":212809,"byte_end":212813,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6639},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213103,"byte_end":213107,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213416,"byte_end":213420,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6639},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/then.rs","byte_start":213658,"byte_end":213662,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6639},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":215573,"byte_end":215576,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217327,"byte_end":217330,"line_start":67,"line_end":67,"column_start":32,"column_end":35},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6709},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/zip.rs","byte_start":217521,"byte_end":217524,"line_start":75,"line_end":75,"column_start":27,"column_end":30},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":6709},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220208,"byte_end":220212,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6772},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220698,"byte_end":220702,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":220866,"byte_end":220870,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":221337,"byte_end":221341,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6772},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/scan.rs","byte_start":222604,"byte_end":222608,"line_start":115,"line_end":115,"column_start":40,"column_end":44},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":6772},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122558,"byte_end":122559,"line_start":194,"line_end":194,"column_start":31,"column_end":32},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":1419},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/stream/mod.rs","byte_start":122702,"byte_end":122708,"line_start":198,"line_end":198,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1420}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254190,"byte_end":254197,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6852},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254490,"byte_end":254497,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":254790,"byte_end":254797,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6852},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/and_then.rs","byte_start":256011,"byte_end":256018,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":6852},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":256913,"byte_end":256923,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":257122,"byte_end":257132,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7150},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/into_stream.rs","byte_start":257253,"byte_end":257263,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7150},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258328,"byte_end":258334,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7347},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258626,"byte_end":258632,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7347},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":258922,"byte_end":258928,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7347},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/or_else.rs","byte_start":260276,"byte_end":260282,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7347},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261198,"byte_end":261205,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7417},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261259,"byte_end":261266,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261432,"byte_end":261439,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7417},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_next.rs","byte_start":261581,"byte_end":261588,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7417},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262330,"byte_end":262340,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7425},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262636,"byte_end":262646,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_for_each.rs","byte_start":262960,"byte_end":262970,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7425},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264347,"byte_end":264356,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7491},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":264752,"byte_end":264761,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":265065,"byte_end":265074,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7491},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter.rs","byte_start":265343,"byte_end":265352,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":7491},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267525,"byte_end":267537,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7564},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":267837,"byte_end":267849,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":268054,"byte_end":268066,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7564},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_filter_map.rs","byte_start":268356,"byte_end":268368,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":7564},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270538,"byte_end":270548,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":270813,"byte_end":270823,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7634},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_flatten.rs","byte_start":271069,"byte_end":271079,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7634},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272675,"byte_end":272685,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":272877,"byte_end":272887,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7684},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_collect.rs","byte_start":273075,"byte_end":273085,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":7684},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274096,"byte_end":274105,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7740},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_concat.rs","byte_start":274371,"byte_end":274380,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7740},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275618,"byte_end":275625,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7785},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":275984,"byte_end":275991,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7785},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":276349,"byte_end":276356,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7785},"to":{"krate":4,"index":17}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_fold.rs","byte_start":276622,"byte_end":276629,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":7785},"to":{"krate":1,"index":8293}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280435,"byte_end":280444,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7864},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_unfold.rs","byte_start":280745,"byte_end":280754,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":7864},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282492,"byte_end":282504,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7929},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":282960,"byte_end":282972,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":283421,"byte_end":283433,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7929},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/try_skip_while.rs","byte_start":284986,"byte_end":284998,"line_start":106,"line_end":106,"column_start":34,"column_end":46},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":7929},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227549,"byte_end":227550,"line_start":128,"line_end":128,"column_start":46,"column_end":47},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":1931}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/try_stream/mod.rs","byte_start":227631,"byte_end":227640,"line_start":131,"line_end":131,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":1931}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":285764,"byte_end":285768,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8005},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/iter.rs","byte_start":286374,"byte_end":286378,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8005},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287512,"byte_end":287518,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8011},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287545,"byte_end":287551,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8011},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/repeat.rs","byte_start":287858,"byte_end":287864,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8011},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288476,"byte_end":288481,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":8017},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288513,"byte_end":288518,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":8017},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/empty.rs","byte_start":288603,"byte_end":288608,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":8017},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289667,"byte_end":289671,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":289800,"byte_end":289804,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8023},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/once.rs","byte_start":290444,"byte_end":290448,"line_start":64,"line_end":64,"column_start":35,"column_end":39},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8023},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291058,"byte_end":291065,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":8065},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291097,"byte_end":291104,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":8065},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/pending.rs","byte_start":291189,"byte_end":291196,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":8065},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291721,"byte_end":291727,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":2118},"to":{"krate":1,"index":1944}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":291758,"byte_end":291764,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":2118},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/poll_fn.rs","byte_start":292506,"byte_end":292512,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":2118},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":293878,"byte_end":293884,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":8071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295358,"byte_end":295364,"line_start":77,"line_end":77,"column_start":32,"column_end":38},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":8071},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/select.rs","byte_start":295582,"byte_end":295588,"line_start":86,"line_end":86,"column_start":27,"column_end":33},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":8071},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":298901,"byte_end":298907,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8132},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":299210,"byte_end":299216,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8132},"to":{"krate":4,"index":82}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/stream/unfold.rs","byte_start":299442,"byte_end":299448,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8132},"to":{"krate":4,"index":68}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301313,"byte_end":301315,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":2221},"to":{"krate":0,"index":2224}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301370,"byte_end":301372,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":2223},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":301451,"byte_end":301456,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":17,"index":10},"to":{"krate":0,"index":2224}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/task/spawn.rs","byte_start":304111,"byte_end":304121,"line_start":95,"line_end":95,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":17,"index":13},"to":{"krate":0,"index":2225}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307460,"byte_end":307461,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":2255},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307599,"byte_end":307606,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2250},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307695,"byte_end":307696,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":2264},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307881,"byte_end":307887,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2260},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":307965,"byte_end":307966,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":2272},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":308981,"byte_end":308985,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":2277},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309079,"byte_end":309083,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":2277},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309342,"byte_end":309349,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":8216},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309572,"byte_end":309579,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":8216},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":309770,"byte_end":309777,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":8216},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310082,"byte_end":310095,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":8237},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310431,"byte_end":310440,"line_start":143,"line_end":143,"column_start":27,"column_end":36},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8253},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310641,"byte_end":310650,"line_start":153,"line_end":153,"column_start":26,"column_end":35},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8253},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":310829,"byte_end":310838,"line_start":162,"line_end":162,"column_start":23,"column_end":32},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":8253},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311158,"byte_end":311165,"line_start":178,"line_end":178,"column_start":41,"column_end":48},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":8268},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311384,"byte_end":311391,"line_start":187,"line_end":187,"column_start":40,"column_end":47},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":8268},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311569,"byte_end":311576,"line_start":195,"line_end":195,"column_start":37,"column_end":44},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":8268},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":311877,"byte_end":311885,"line_start":210,"line_end":210,"column_start":41,"column_end":49},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":8283},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312108,"byte_end":312116,"line_start":219,"line_end":219,"column_start":40,"column_end":48},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":8283},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312298,"byte_end":312306,"line_start":227,"line_end":227,"column_start":37,"column_end":45},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8283},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312616,"byte_end":312627,"line_start":242,"line_end":242,"column_start":49,"column_end":60},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8298},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":312864,"byte_end":312875,"line_start":251,"line_end":251,"column_start":48,"column_end":59},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8298},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313090,"byte_end":313101,"line_start":259,"line_end":259,"column_start":45,"column_end":56},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8298},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313446,"byte_end":313458,"line_start":274,"line_end":274,"column_start":49,"column_end":61},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313696,"byte_end":313708,"line_start":283,"line_end":283,"column_start":48,"column_end":60},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":313924,"byte_end":313936,"line_start":291,"line_end":291,"column_start":45,"column_end":57},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8310},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314533,"byte_end":314547,"line_start":311,"line_end":311,"column_start":41,"column_end":55},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8322},"to":{"krate":0,"index":2250}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314768,"byte_end":314782,"line_start":320,"line_end":320,"column_start":40,"column_end":54},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8322},"to":{"krate":0,"index":2260}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":314981,"byte_end":314995,"line_start":328,"line_end":328,"column_start":37,"column_end":51},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8322},"to":{"krate":0,"index":2268}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":315299,"byte_end":315305,"line_start":342,"line_end":342,"column_start":21,"column_end":27},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":2441},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/Users/timothelaude/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.5/src/fns.rs","byte_start":315400,"byte_end":315406,"line_start":347,"line_end":347,"column_start":27,"column_end":33},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":2441},"to":{"krate":0,"index":2250}}]}